# Copyright:	Public domain.
# Filename: 	Makefile.inc
# Purpose:  	Makefile include for all flights.
# Contact:  	Ron Burkey <info@sandroid.org>.
# Website:  	http://www.ibiblio.org/apollo
# Mod history:	2016-10-04 JL   Created.
#               2016-10-04 JL   Added format target.
#		2016-10-05 JL	Re-enable HTML output.
#		2016-10-11 RSB	The executable and html are now built separately,
#				rather than in one step, since they actually 
#				need different command-line switches in yaYUL
#				for optimum prettiness.
#		2016-10-21 RSB	Hadn't been accounting for the fact that 
#				oct2bin need different args for --block1.
#		2016-11-07 RSB	The 2016-10-11 change must have broken building
#				the HTML for Validation.agc, which in turn
#				broke the ability to build the installer
#				for VirtualAGC.
#		2016-11-11 RSB	Added the (optional) EXTRA_TARGETS.

# Notes: 
#
#  1. `BASENAME` must be set in the calling Makefile to the flight name.
#
#  2. Define `NO_BINSOURCE in those missions that do not have a binsource image.
#
#  3. For normal missions, a binsource is used to generate a known-good bin 
#     image, and the output of yaYUL is compared against it to check for 
#     correctness. 
#
#  4. For `Validation`, or for missions where we do not have a known-good 
#     image, the bin file generated by yaYUL is used as is. 
# 
#  5. To get yaYUL to generate HTML output, define `GEN_HTML`.

# EDIT for AGC-Homebrew repository: append "--hardware" flag to EXTRA_YAYUL_ARGS
EXTRA_YAYUL_ARGS+=--hardware

# Used by the install target, whatever that's for.
ifndef PREFIX
PREFIX=/usr/local
endif

# Used to define where the VirtualAGC toolset is located, cloned separately.
ifndef VIRTAGC_PREFIX
VIRTAGC_PREFIX=../../virtualagc
endif

# Enable/disable HTML generation.
GEN_HTML=yes

TARGETS=$(BASENAME).bin $(BASENAME).lst $(BASENAME).symtab
ifeq "$(BASENAME)" "Validation"
TARGETS+=$(BASENAME).txt
TOPLEVEL=Validation
else
TOPLEVEL=MAIN
endif
ifeq "$(GEN_HTML)" "yes"
TARGETS+=$(TOPLEVEL).agc.html
endif

SOURCE:=$(wildcard *.agc)

default: $(TARGETS) $(EXTRA_TARGETS)

$(BASENAME).bin: $(TOPLEVEL).agc.bin
	mv -f $< $@

$(BASENAME).txt: $(BASENAME).bin
	$(VIRTAGC_PREFIX)/Tools/webb2burkey-rope $(BASENAME).bin $(BASENAME).txt

# Assemble the actual source files.
$(TOPLEVEL).agc.bin $(TOPLEVEL).agc.lst: $(SOURCE)
	$(VIRTAGC_PREFIX)/yaYUL/yaYUL --unpound-page $(EXTRA_YAYUL_ARGS) $(TOPLEVEL).agc >$(TOPLEVEL).agc.lst

# Generate HTML.
$(TOPLEVEL).agc.html: $(SOURCE)
	$(VIRTAGC_PREFIX)/yaYUL/yaYUL --html $(EXTRA_YAYUL_ARGS) $(TOPLEVEL).agc >/dev/null

# Compare rope images, and rename output files.
$(BASENAME).lst: $(TOPLEVEL).agc.bin $(TOPLEVEL).agc.lst $(BASENAME).bin
	mv $(TOPLEVEL).agc.lst $(BASENAME).lst

$(BASENAME).symtab: $(BASENAME).lst
	mv $(TOPLEVEL).agc.symtab $(BASENAME).symtab

clean:
	-rm -f *.lst *~ $(TOPLEVEL).agc.bin $(BASENAME).bin \
		*.symtab oct2bin.bin* *.html $(EXTRA_TARGETS)

# Recipe for reformatting an AGC source file.
%.agc.out: %.agc 
	$(VIRTAGC_PREFIX)/yaYUL/yaYUL --unpound-page $(EXTRA_YAYUL_ARGS) --format $< >$@
ifeq "$(REFORMAT)" "yes"
	mv -f $@ $<
endif

# Reformat all AGC source files.
format: $(SOURCE:.agc=.agc.out)

install: default
	cp $(BASENAME).bin ${PREFIX}/bin/
	chmod ugo+r ${PREFIX}/bin/$(BASENAME).bin
