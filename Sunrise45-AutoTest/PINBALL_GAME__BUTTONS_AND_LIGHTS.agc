### FILE="Main.annotation"
## Copyright:	Public domain.
## Filename:	PINBALL_GAME__BUTTONS_AND_LIGHTS.agc
## Purpose:	A section of Sunrise 45.
##		It is part of the reconstructed source code for the penultimate
##		release of the Block I Command Module system test software. No
##		original listings of this program are available; instead, this
##		file was created via disassembly of dumps of Sunrise core rope
##		memory modules and comparison with the later Block I program
##		Solarium 55.
## Assembler:	yaYUL --block1
## Contact:	Ron Burkey <info@sandroid.org>.
## Website:	www.ibiblio.org/apollo/index.html
## Mod history:	2022-12-09 MAS	Initial reconstructed source.


# KEYBOARD AND DISPLAY PROGRAM
#
#
#
# THE FOLLOWING QUOTATION IS PROVIDED THROUGH THE COUTESY OF THE AUTHORS.
#
#	::IT WILL BE PROVED TO THY FACE THAT THOU HAST MEN ABOUT THEE THAT
# USUALLY TALK OF A NOUN AND A VERB, AND SUCH ABOMINABLE WORDS AS NO
# CHRISTIAN EAR CAN ENDURE TO HEAR.::
#
#			HENRY 6, ACT 2, SCENE 4
#
#
# SUMMARY OF ERASABLE ASSIGNMENTS FOR KEYBOARD AND DISPLAY PROGRAM 
# WHICH ARE ALL DEFINED ELSEWHERE.
#
#
#
#		SETLOC	627
#
# BUFFER STORAGE AREAS FOR ROUTINES USING DISPLAY OR LOAD ROUTINES.
# DSPTEM1	ERASE	+2		BUFFER STORAGE AREA 1 (MOSTLY FOR TIME)
# DSPTEM2	ERASE	+2		BUFFER STORAGE AREA 2 (MOSTLY FOR DEG)
#
# ERASABLE ASSIGNMENTS SPECIFIC TO PINBALL
#
#
#
# ERASABLES RESERVED FOR EXECUTIVE ACTION
#
# DSPCOUNT	ERASE			DISPLAY POSITION INDICATOR
# DECBRNCH	ERASE			+DEC, - DEC, OCT INDICATOR
# VERBREG	ERASE			VERB CODE
# NOUNREG	ERASE			NOUN CODE
# XREG		ERASE			R1 INPUT BUFFER
# YREG		ERASE			R2 INPUT BUFFER
# ZREG		ERASE			R3 INPUT BUFFER
# XREGLP	ERASE			LO PART OF XREG (FOR DEC CONV ONLY)
# YREGLP	ERASE			LO PART OF YREG (FOR DEC CONV ONLY)
# ZREGLP	ERASE			LO PART OF ZREG (FOR DEC CONV ONLY)
# MODREG	ERASE			MODE CODE
# DSPLOCK	ERASE			KEYBOARD/SUBROUTINE CALL INTERLOCK
# REQRET	ERASE			RETURN REGISTER FOR LOAD
# LOADSTAT	ERASE			STATUS INDICATOR FOR LOADTST
# CLPASS	ERASE			PASS INDICATOR CLEAR
# NOUT		ERASE			ACTIVITY COUNTER FOR DSPTAB
# NOUNADD	ERASE			MACHINE ADDRESS FOR NOUN
# MONSAVE	ERASE			N/V CODE FOR MONITOR. ALSO ACTIVITY
# MONSAVE1	ERASE			NOUNADD STORAGE FOR MONITOR WITH MATBS
# DSPTAB	ERASE	+13D		0-10, DISPLAY PANEL BUFFER. 11-13, C RELAYS
# CADRSTOR	ERASE			ENDIDLE STORAGE
# GRABLOCK	ERASE			INTERNAL INTERLOCK FOR DISPLAY SYSTEM
# NVQTEM	ERASE			NVSUB STORAGE FOR CALLING Q
# NVBNKTEM	ERASE			NVSUB STORAGE FOR CALLING BANK
# DSPLIST	ERASE	+2		WAITING LIST FOR DSP SYST INTERNAL USE
# END OF ERASABLES RESERVED FOR EXECUTIVE ACTION
#
# ERASABLES RESERVED FOR INTERRUPT ACTION
#
# IN0WORD	ERASE			INPUT CODE STORAGE (KEYRUPT OR UPRUPT)
# DSPCNT	ERASE			COUNTER FOR DSPOUT
#
#
#
# TEMPORARY ERASABLES FOR EXECUTIVE ACTION
#
# DSEXIT	=	COMPON		RETURN FOR DSPIN
# EXITEM	=	COMPON		RETURN FOR SCALE FACTOR ROUTINE SELECT
# BLANKRET	=	COMPON		RETURN FOR 2BLANK
#
# WRDRET	=	TEM9		RETURN FOR 5BLANK
# WDRET		=	TEM9		RETURN FOR DSPWD
# DECRET	=	TEM9		RETURN FOR PUTCOM(DEC LOAD)
# 21/22REG	=	TEM9		TEMP FOR CHARIN
#
# UPDATRET	=	ORDER		RETURN FOR UPDATNN, UPDATVB
# CHAR		=	ORDER		TEMP FOR CHARIN
# ERCNT		=	ORDER		COUNTER FOR ERROR LIGHT RESET
# DECOUNT	=	ORDER		COUNTER FOR SCALING AND DISPLAY (DEC)
#
# SGNON		=	TEM11		TEMP FOR +,- ON
# NOUNTEM	=	TEM11		COUNTER FOR MIXNOUN FETCH
# DISTEM	= 	TEM11		COUNTER FOR OCTAL DISPLAY VERBS
# DECTEM	=	TEM11		COUNTER FOR FETCH (DEC DISPLAY VERBS)
# DECTEM1	=	TEM11		TEMP FOR NUM
#
# SGNOFF	=	DVSW		TEMP FOR +,- ON
# NVTEMP	=	DVSW		TEMP FOR NVSUB
# SFTEMP1	=	DVSW		STORAGE FOR SF CONST HI PART (=SFTEMP2-1)
# DECTEM2	=	DVSW		TEMP FOR NUM
#
# CODE		=	BRANCHQ		FOR DSPIN
# SFTEMP2	=	BRANCHQ		STORAGE FOR SF CONST LO PART (=SFTEMP1+1)
#
# ENTRET	=	MODE		EXIT FROM ENTER
#
# PROGREG	=	VBUF +2		FOR GO EXEC PROGRAM
# MIXTEMP	=	VBUF +2		FOR MIXNOUN DATA
# SIGNRET	=	VBUF +2		RETURN FOR +,- ON
#

# ALSO PROGREG+1, PROGREG+2. MIXTEMP+1, MIXTEMP+2.
#
# WDCNT		=	VBUF +5		CHAR COUNTER FOR DSPWD
# INREL		=	VBUF +5		INPUT BUFFER SELECTOR ( X,Y,Z, REG )
#
# MIXBR		=	TEM10		INDICATOR FOR MIXED OR NORMAL NOUN
# DSPMMTEM	=	TEM10		DSPCOUNT SAVE FOR DSPMM
#
# MONTEM	=	NEWEQIND	TEMP RETURN FOR MONITOR
# DSREL		=	TEM2		REL ADDRESS FOR DSPIN (TEM2 USED BY DAD1)
#
# DSMAG		=	TEM4		MAGNITUDE STORE FOR DSPIN
# IDADDTEM	=	TEM4		MIXNOUN INDIRECT ADDRESS STORAGE
#
# COUNT		=	TEM5		FOR DSPIN  (TEM5 IS USED BY DAD)
# LSTPTR	=	ARETURN		LIST POINTER FOR GRABUSY
# RELRET	=	ARETURN		RETURN FOR RELDSP
# FREERET	=	ARETURN		RETURN FOR FREEDSP
#
# CADRTEM	=	ESCAPE		TEMP STORAGE FOR GRAB ROUTINES
#
#
#
# TEMPORARY ERASABLES FOR INTERRUPT ACTION
#
# KEYTEMP1	=	WTEXIT		TEMP FOR KEYRUPT, UPRUPT
# DSRUPTEM	=	WTEXIT		TEMP FOR DSPOUT
# KEYTEMP2	=	RUPTAGN		TEMP FOR KEYRUPT, UPRUPT


# THE INPUT CODES ASSUMED FOR THE KEYBOARD ARE,
# 0		10000
# 1		00001
# 9		01001
# VERB		10001
# ERROR RES	10010
# KEY RLSE	11001
# +		11010
# -		11011
# ENTER		11100
# CLEAR		11110
# NOUN		11111
#
#
#
# OUTPUT FORMAT FOR DISPLAY PANEL. SET OUT0 TO  AAAABCCCCCDDDDD.
# A-S SELECT A RELAYWORD. THIS DETERMINES WHICH PAIR OF CHARACTERS ARE
# ENERGIZED.
# B FOR SPECIAL RELAYS SUCH AS SIGNS ETC.
# C-S  5 BIT RELAY CODE FOR LEFT CHAR OF PAIR SELECTED BY RELAYWORD
# D-S  5 BIT RELAY CODE FOR RIGHTCHAR OF PAIR SELECTED BY RELAYWORD.
#
# THE PANEL APPEARS AS FOLLOWS,
# MD1	MD2 				(MAJOR MODE)
# VD1	VD2 (VERB)	ND1	ND2	(NOUN)
# R1D1	R1D2	R1D3	R1D4	R1D5 	(R1)
# R2D1	R2D2	R2D3	R2D4	R2D5 	(R2)
# R3D1	R3D2	R3D3	R3D4	R3D5 	(R3)
#
# EACH OF THESE IS GIVEN A DSPCOUNT NUMBER FOR USE WITHIN COMPUTATION ONLY
# MD1	25	R2D1	11		ALL ARE OCTAL
# MD2	24	R2D2	10
# VD1	23	R2D3	7
# VD2	22	R2D4	6
# ND1	21	R2D5	5
# ND2	20	R3D1	4
# R1D1	16	R3D2	3
# R1D2	15	R3D3	2
# R1D3	14	R3D4	1
# R1D4	13	R3D5	0
# R1D5	12
#
#
#
# THERE IS AN 11 REGISTER TABLE (DSPTAB) FOR THE DISPLAY PANEL.
#
# DSPTAB	RELAYWD		BIT11		BITS 10-6	BITS 5-1
# RELADD
# 10		1011				MD1 (25)	MD2  (24)
# 9		1010		FLASH		VD1 (23)	VD2  (22)
# 8		1001				ND1 (21)	ND2  (20)
# 7		1000		UPACT				R1D1 (16)
# 6		0111		+R1		R1D2 (15)	R1D3 (14)
# 5		0110		-R1		R1D4 (13)	R1D5 (12)
# 4		0101		+R2		R2D1 (11)	R2D2 (10)
# 3		0100		-R2		R2D3 (7)	R2D4 (6)
# 2		0011				R2D5 (5)	R3D1 (4)
# 1		0010		+R3		R3D2 (3)	R3D3 (2)
# 0		0001		-R3		R3D4 (1)	R3D5 (0)
#		0000	    NO RELAYWORD
#
#
#
# THE 5 BIT RELAY CODES ARE,
# BLANK		00000
# 0		10101
# 1		00011
# 2		11001
# 3		11011
# 4		01111
# 5		11110
# 6		11100
# 7		10011
# 8		11101
# 9		11111


		SETLOC	50000

GRABUSYB	TC	GRABUSY1
NVSUBSYB	TC	NVSUBSY1

FLASHON		XCH	Q
		TS	DSEXIT
		TC	FLASHON1

FLASHOFF	XCH	Q
		TS	DSEXIT
		TC	FLASHOF1
					# END OF STANDARD LEAD INS.

CHARIN		CAF	ONE		# BLOCK DISPLAY SYST BUT SAVE OLD
		XCH	DSPLOCK		# C(DSPLOCK) FOR ERROR LIGHT RESET.
		TS	21/22REG
		XCH	MPAC
		TS	CHAR
		INDEX	A
		TC	+1		# INPUT CODE	FUNCTION
		TC	CHARALRM	# 0
		TC	NUM		# 1
		TC	NUM		# 2
		TC	NUM		# 3
		TC	NUM		# 4
		TC	NUM		# 5
		TC	NUM		# 6
		TC	NUM		# 7
		TC	89TEST		# 10		    8
		TC	89TEST		# 11		    9
		TC	CHARALRM	# 12
		TC	CHARALRM	# 13
		TC	CHARALRM	# 14
		TC	CHARALRM	# 15
		TC	CHARALRM	# 16
		TC	CHARALRM	# 17
		TC	NUM -2		# 20		    0
		TC	VERB		# 21		    VERB
		TC	ERROR		# 22		    ERROR LIGHT RESET
		TC	CHARALRM	# 23
		TC	CHARALRM	# 24
		TC	CHARALRM	# 25
		TC	CHARALRM	# 26
		TC	CHARALRM	# 27
		TC	CHARALRM	# 30
		TC	VBRELDSP	# 31		    KEY RELEASE
		TC	POSGN		# 32		    +
		TC	NEGSGN		# 33		    -
		TC	ENTERJMP	# 34		    ENTER
		TC	CHARALRM	# 35
		TC	CLEAR		# 36		    CLEAR
		TC	NOUN		# 37		    NOUN


ENTERJMP	CAF	LENTER
		TC	BANKJUMP
LENTER		CADR	ENTER


89TEST		CCS	DECBRNCH
		TC	NUM		# IF DECBRNCH IS +, 8 OR 9 OK
		TC	CHARALRM	# IF DECBRNCH IS +0, REJECT 8 OR 9


# NUM ASSEMBLES OCTAL 3 BITS AT A TIME. FOR DECIMAL IT CONVERTS INCOMING
# WORD AS A FRACTION, KEEPING RESULTS TO DP.
# OCTAL RESULTS ARE LEFT IN XREG, YREG, OR ZREG. HI PART OF DEC IN XREG,
# YREG, ZREG. THE LOW PARTS IN XREGLP, YREGLP, OR ZREGLP)
# DECBRNCH IS LEFT AT +0 FOR OCT, +1 FOR + DEC, +2 FOR - DEC.
# IF DSPCOUNT WAS LEFT -, NO MORE DATA IS ACCEPTED.

		CAF	ZERO
		TS	CHAR
NUM		CCS	DSPCOUNT
		TC	+4		# +
		TC	+3		# +0
		TC	+1		# -BLOCK DATA IN IF DSPCOUNT IS -
		TC	ENDOFJOB	# -0
		TC	GETINREL
		CCS	CLPASS		# IF CLPASS IS + OR +0, MAKE IT +0.
		CAF	ZERO
		TS	CLPASS
		TC	+1
		INDEX	CHAR
		CAF	RELTAB
		MASK	LOW5
		TS	CODE
		XCH	DSPCOUNT
		TS	COUNT
		TS	DSPCOUNT
		TC	DSPIN
		CCS	DECBRNCH	# +0, OCTAL.  +1, + DEC.  +2, - DEC.
		TC	DECTOBIN	# +
		INDEX	INREL		# +0 OCTAL
		XCH	VERBREG
		TS	CYL
		CS	CYL
		CS	CYL
		XCH	CYL
		AD	CHAR
		TC	ENDNMTST
DECTOBIN	INDEX	INREL
		XCH	VERBREG
		TS	MPAC		# SUM X 2EXP-14 IN MPAC
		TC	DECDOUBL
		TS	DECTEM2
		TC	DECDOUBL
		TC	DECDOUBL
		AD	DECTEM2		# 10SUM IN MPAC
		TC	DECDOUBL +1
		AD	CHAR
		TC	DECDOUBL +1
ENDNMTST	INDEX	INREL
		TS	VERBREG
		TS	MPAC
		CS	DSPCOUNT
		INDEX	INREL
		AD	CRITCON
		CCS	A
		TC	CHARALRM	# +	 PATHOLOGICAL CASE
		TC	CHARALRM	# +0	IMPOSSIBLE
		TC	MORNUM		# -
ENDNUM		CCS	DECBRNCH
		TC	DECEND
ENDALL		CS	DSPCOUNT	# BLOCK NUMIN BY PLACING DSPCOUNT
		TC	MORNUM +1	# NEGATIVELY
DECEND		CAF	DECON +1
		TS	MPAC +1
		CAF	DECON
		XCH	MPAC
		TC	SHORTMP
DECSIGN		INDEX	DECBRNCH
		TC	+0
		TC	ENDECOM
		CS	MPAC +1
		TS	MPAC +1
		CS	MPAC
ENDECOM		INDEX	INREL
		TS	VERBREG
		XCH	MPAC +1
		INDEX	INREL
		TS	XREGLP -2
		TC	ENDALL
MORNUM		CCS	DSPCOUNT	# DECREMENT DSPCOUNT
		TS	DSPCOUNT
		TC	ENDOFJOB

CRITCON		OCT	22		# (DEC 18)
		OCT	20		# (DEC 16)
		OCT	12		# (DEC 10)
		OCT	5
		OCT	0

DECDOUBL	DOUBLE
		OVSK
		TC	Q

		CAF	DECON2 +1
		TS	MPAC +1
		CAF	DECON2
		XCH	MPAC
		TS	DECTEM2
		TC	SHORTMP
		AD	DECTEM2
		TS	MPAC

		CAF	DECON
		EXTEND
		MP	CHAR
		TS	OVCTR

		XCH	MPAC +1
		AD	LP
		XCH	MPAC +1
		XCH	OVCTR
		AD	MPAC
		TS	MPAC

		TC	DECSIGN

DECON		2DEC	1 E-5 B14	# 2EXP14/10EXP5 = .16384 DEC
DECON2		2DEC	0.6384

# GETINREL GETS PROPER DATA REG REL ADDRESS FOR CURRENT C(DSPCOUNT) AND
# PUTS IN INTO INREL. +0 VERBREG, 1 NOUNREG, 2 XREG, 3 YREG, 4 ZREG.

GETINREL	INDEX	DSPCOUNT
		CAF	INRELTAB
		TS	INREL		# (A TEMP, REG)
		TC	Q

INRELTAB	OCT	4		# R3D5 (DSPCOUNT = 0)
		OCT	4		# R3D4		 =(1)
		OCT	4		# R3D3		 =(2)
		OCT	4		# R3D2		 =(3)
		OCT	4	 	# R3D1		 =(4)
		OCT	3		# R2D5		 =(5)
		OCT	3		# R2D4		 =(6)
		OCT	3		# R2D3		 =(7)
		OCT	3		# R2D2		 =(8D)
		OCT	3		# R2D1		 =(9D)
		OCT	2		# R1D5		 =(10D)
		OCT	2		# R1D4		 =(11D)
		OCT	2		# R1D3		 =(12D)
		OCT	2		# R1D2		 =(13D)
		OCT	2		# R1D1		 =(14D)
		LOC     +1		# NO DSPCOUNT NUMBER = 15D
		OCT	1		# ND2		 =(16D)
		OCT	1		# ND1		 =(17D)
		OCT	0		# VD2		 =(18D)
		OCT	0		# VD1		 =(19D)



VERB		CAF	ZERO
		TS	VERBREG
		TS	CODE		# VERB CANT USE 2BLANK SINCE THAT TURNS
		CAF	VD1		# THE FLASH OFF
		TS	DSPCOUNT
		TS	COUNT
		TC	DSPIN
		CAF	VD2
		TS	COUNT
		CAF	ZERO
		TS	CODE
		TC	DSPIN
N/VCOM		CAF	ZERO
		TS	DECBRNCH
		TS	REQRET		# SET FOR ENTPAS0
		CAF	ENDINST		# IF DSPALARM OCCURS BEFORE FIRST ENTPAS0
		TS	ENTRET		# OR NVSUB, ENTRET MUST ALREADY BE SET
					# TO TC ENDOFJOB
		TC	ENDOFJOB
NOUN		CAF	ZERO
		TS	NOUNREG
		CAF	ND1		# ND1, OCT 21 (DEC 17)
		TS	DSPCOUNT
		TC	2BLANK
		TC	N/VCOM



VD2		=	CRITCON		# OCT 22



NEGSGN		TC	SIGNTEST
		CAF	TWO
		TS	DECBRNCH	# SET DEC COMP BIT TO 1 (IN DECBRNCH)
		TC 	-ON
FIXCLPAS	CCS	CLPASS		# IF CLPASS IS + OR +0, MAKE IT +0.
		CAF	ZERO
		TS	CLPASS
		TC	+1
		TC	ENDOFJOB

POSGN		TC	SIGNTEST
		CAF	ONE
		TS	DECBRNCH
		TC	+ON
		TC	FIXCLPAS

+ON		XCH	Q
		TS	SIGNRET
		TC	GETINREL
		INDEX	INREL
		CAF	SGNTAB -2
		TS	SGNOFF
		AD 	ONE
		TS	SGNON
SGNCOM		CAF	ZERO
		TS	CODE
		XCH	SGNOFF
		TC	11DSPIN
		CAF	BIT11
		TS	CODE
		XCH	SGNON
		TC	11DSPIN
		TC	SIGNRET
-ON		XCH	Q
		TS	SIGNRET
		TC	GETINREL
		INDEX	INREL
		CAF	SGNTAB -2
		TS	SGNON
		AD	ONE
		TS	SGNOFF
		TC	SGNCOM

SGNTAB		OCT	5		# -R1
		OCT	3		# -R2
		OCT	0		# -R3



SIGNTEST	XCH	Q		# ALLOWS +,- ONLY WHEN DSPCOUNT=R1D1,
		TS	SIGNRET		# R2D1, OR R3D1. ALLOWS ONLY FIRST OF
		CS	R1D1
		TC	SGNTST1
		CS	R2D1
		TC	SGNTST1
		CS	R3D1
		TC	SGNTST1
		TC	ENDOFJOB	# NO MATCH FOUND. SIGN ILLEGAL
SGNTST1		AD	DSPCOUNT
		CCS	A
		TC	Q
		LOC	+1
		TC	Q
		TC	SIGNRET		# SIGN LEGAL



# ERROR LIGHT RESET RESETS TMALM, DSPALARM (CHECK FAIL), PROGALM, UNBLOCKS
# ENDPULSES, RESETS ERRUPT TRAP. IT ALSO FORCES BIT 12 OF ALL DSPTAB
# ENTRIES TO ONE. RESETS UPACT LIGHT.

ERROR		XCH	21/22REG
		TS	DSPLOCK
		INHINT
		CS	BIT7		# RESET ERRUPT TRAP
		MASK	OUT1
		AD	BIT7
		TS	OUT1
		CS	CFAILCON	# RESET THE C RELAYS FOR IMU FAIL, CDUFAIL
		MASK	DSPTAB +11D	# PIPA FAIL.
		AD	BIT15
		TS	DSPTAB +11D
		CS	ERCON
		MASK	OUT1
		TS	OUT1
TSTAB		CAF	BINCON		# (DEC 10)
		TS	ERCNT		# ERCNT = COUNT
		INHINT
		INDEX	ERCNT
		CCS	DSPTAB
		AD	ONE
		TC	ERPLUS
		AD	ONE
ERMINUS		CS	A
		MASK	NOTBIT12
		TC	ERCOM
ERPLUS		CS	A
		MASK	NOTBIT12
		CS	A		# MIGHT WANT TO RESET CLPASS, DECBRNCH,
ERCOM		INDEX	ERCNT		# ETC.
		TS	DSPTAB
		RELINT
		CCS	ERCNT
		TC	TSTAB +1
		CAF	ZERO
		TS	FAILREG
		TS	CODE
		CAF	SEVEN
		TC	11DSPIN		# TURN OFF UPACT LIGHT
		TC	ENDOFJOB

ERCON		OCT	01131		# BITS 1, 4, 5, 7, 10.
					# PROGALM, TMFAIL, CHECK FAIL, ERRUPT TRAP
					# END PULSES.

NOTBIT12	OCT	73777
CFAILCON	OCT	40340



# CLEAR BLANKS WHICH R1, R2, R3 IS CURRENT OR LAST TO BE DISPLAYED (PERTINE
# NT XREG,YREG,ZREG IS CLEARED). SUCCESSIVE CLEARS TAKE CARE OF EACH RX
# L/ RC UNTIL R1 IS DONE. THEN NO FURTHER ACTION
#
# THE SINGLE COMPONENT LOAD VERBS ALLOW ONLY THE SINGLE RC THAT IS
# APPROPRIATE TO BE CLEARED.
#
# CLPASS	+0  PASS0, CAN BE BACKED UP
#		+NZ  HIPASS, CAN BE BACKED UP
#		-NZ  PASS0, CANNOT BE BACKED UP

CLEAR		CCS	CLPASS
		TC	CLPASHI		# +
		TC	+2		# +0	IF CLPASS IS +0 OR -, IT IS PASS0
		TC	+1		# -
		CCS	DSPCOUNT
		AD	ONE
		TC	+2
		AD	ONE
		TS	DSPCOUNT
		TC	GETINREL
		TC	LEGALTST
		TC	CLEAR1
CLPASHI		CCS	INREL
		TS	INREL
		TC	LEGALTST
		XCH	REQRET
		AD	DOUBLK +2	# +3 TO - NUMBER. BACKS UP DATA REQUESTS
		TS	REQRET
		XCH	INREL
		TS	MIXTEMP		# TEMP STORAGE FOR INREL
		XCH	VERBREG		# DECREMENT VERB AND RE-DISPLAY
		AD	NEG1
		TS	VERBREG
		CAF	LUPDATVB
		TC	SWCALL
		XCH	MIXTEMP
		TS	INREL		# RESTORE INREL
CLEAR1		TC	CLR5
		CAF	ONE
		AD	CLPASS		# ONLY IF CLPASS IS + OR +0,
		TS	CLPASS		# SET FOR HIGHER PASS.
		TC	ENDOFJOB
CLR5		XCH	Q
		TS	WRDRET		# USES 5BLANK  BUT AVOIDS ITS TC GETINREL
		TC	5BLANK +3
LEGALTST	AD	MINUS2
		CCS	A
		TC	Q		# LEGAL  INREL G/ 2
		LOC	+1
		TC	ENDOFJOB	# ILLEGAL   INREL= 0,1
		TC	Q		# LEGAL    INREL = 2

LUPDATVB	CADR	UPDATVB


# 5BLANK BLANKS 5 CHAR DISPLAY WORD IN R1, R2, OR R3. IT ALSO ZEROES XREG,
# YREG, OR ZREG. PLACE ANY + DSPCOUNT NUMBER FOR PERTINENT RC INTO DSPCOUNT
# DSPCOUNT IS LEFT SET TO LEFT MOST DSP NUMB FOR RC JUST BLANKED.

5BLANK		XCH	Q
		TS	WRDRET
		TC	GETINREL
		CAF	ZERO
		TS	DECBRNCH
		INDEX	INREL
		TS	VERBREG		# ZERO X, Y, Z REG.
		INDEX	INREL
		TS	XREGLP -2
		TS	CODE
		INDEX	INREL
		CAF	SINBLANK -2	# BLANK ISOLATED CHAR SEPARATELY
		TS	COUNT
		TC	DSPIN
5BLANK1		INDEX	INREL
		CAF	DOUBLK -2
		TS	DSPCOUNT
		TC	2BLANK
		CS	TWO
		AD	DSPCOUNT
		TS	DSPCOUNT
		TC	2BLANK
		INDEX	INREL
		CAF	R1D1 -2
		TS	DSPCOUNT	# SET DSPCOUNT TO LEFT MOST DSP NUMBER
		TC	WRDRET		# OF REG. JUST BLANKED

SINBLANK	OCT	16		# DEC 14
		OCT	5
		OCT	4
DOUBLK		OCT	15		# DEC 13
		OCT	11		# DEC 9
		OCT	3

# 2BLANK BLANKS TWO CHAR. PLACE DSP NUMBER OF LEFT CHAR  OF THE PAIR INTO
# DSPCOUNT. THIS NUMBER IS LEFT IN DSPCOUNT

2BLANK		XCH	Q
		TS	BLANKRET
		CS	DSPCOUNT
		CS	A
		TS	SR
		CS	BLANKCON
		INHINT
		INDEX	SR
		XCH	DSPTAB
		CCS	A
		TC	INCNOUT		# IF OLD CONTENTS +,+1 TO NOUT
		LOC	+1
		RELINT			# IF -,NOUT OK
		TC	BLANKRET
BLANKCON	OCT	4000

INCNOUT		XCH	NOUT
		AD	ONE
		TS	NOUT
		INDEX	Q
		TC	1		# RETURN TO 2+ L(CALLING TC)


# ENTER PASS 0 IS THE EXECUTE FUNCTION. HIGHER ORDER ENTERS ARE TO LOAD
# DATA. THE SIGN OF REQRET DETERMINES THE PASS, + FOR PASS 0,- FOR HIGHER
# PASSES.

		SETLOC	42000

NVSUBB		TC	NVSUB1		# STANDARD LEAD INS, DONT MOVE.
DSPMM		XCH	Q
		TS	UPDATRET
		TC	DSPMM1
					# END OF STANDARD LEAD INS.


ENTER		CAF	ZERO
		TS	CLPASS
		CAF	ENDINST
		TS	ENTRET
		CCS	REQRET
		TC	+1		# IF +, PASS 0
		TC	ENTPAS0		# IF +, PASS 0
		AD	ONE		# IF -, NOT PASS 0E
		TS	REQRET		# SET REQRET +.
		CAF	LFLASHOF
		TC	SWCALL
		TC	REQRET

ENTEXIT		=	ENTRET

ENTPAS0		CAF	ZERO		#  NOUN VERB SUB ENTERS HERE
		TS	DECBRNCH
TESTVB		CS	VERBREG		# IF VERB IS 32-77, SKIP NOUN TEST
		AD	LOWVERB		# 32-VB
		CCS	A
		TC	TESTNN		# VERB L/ 32
LOWVERB		OCT	32		# LOWER VERB THAT AVOIDS NOUN TEST
		TC	+1		# VERB G/ 32
		TC	VERBFAN		# VERB=32
TESTNN		CS	NOUNREG
		AD	MIXCON
		CCS	A
		TC	LODNORM		# NOUN L/ FIRST MIXED NOUN
MIXCON		OCT	55		# FIRST MIXED NOUN = 55.
		TC	+1
		TC	MIXNOUN
LODNORM		CAF	ONE
		TS	MIXBR
		INDEX	NOUNREG
		CAF	NNADTAB
		CCS	A
		TC	VERBFAN -2
		TC	GODSPALM
		TC	REQADD
DSPADD		CAF	R3D1
		TS	DSPCOUNT
		XCH	NOUNADD
		AD	ONE
		TS	NOUNADD
		TC	DSPOCTWD
		TC	VERBFAN
REQADD		CAF	BIT15		# SET CLPASS FOR PASS0 ONLY
		TS	CLPASS
		CS	ENDINST
		AD	ENTEXIT
		CCS	A		# TEST IF REACHED HERE FROM INTERNAL OR
		TC	INTMATBS	#		FROM EXTERNAL
		LOC	+1
		TC	INTMATBS		
		TC	REQDATZ		# EXTERNAL MACH ADDR TO BE SPECIFIED
		XCH	ZREG
		TS	NOUNADD
		CAF	ONE
		TS	MIXBR
		TC	VERBFAN

INTMATBS	CAF	R3D1
		TS	DSPCOUNT
		CS	NOUNADD
		CS	A
		TC	DSPOCTWD
		TC	VERBFAN

		AD	ONE
		TS	NOUNADD
VERBFAN		CS	LST2CON
		AD	VERBREG		# VERB-LST2CON
		CCS	A
		AD	ONE		# VERB G/ LST2CON
		TC	+2
		TC	VBFANDIR	# VERB L/ LST2CON
JAMEXTVB	TS	MPAC		# SPECIAL ENTRY FOR FORCING EXTENDED VERB.
		TC	RELDSP		# RELEASE DISPLAY SYST
		XCH	MPAC		# ALSO TURN OFF RELEASE DISPLAY SYST LIGHT
		AD	LST2CADR
		TC	BANKJUMP
LST2CON		OCT	40		# FIRST LST2 VERB
LST2CADR	CADR	LST2FAN		# THE LIST2 FAN IS LOCATED IN BANK 05

VBFANDIR	INDEX	VERBREG
		CAF	VERBTAB
		TC	BANKJUMP

VERBTAB		CADR	DSPALARM	# VB00 ILLEGAL
		CADR	DSPA		# VB01 DISPLAY OCT COMP 1 (R1)
		CADR	DSPB		# VB02 DISPLAY OCT COMP 2 (R1)
		CADR	DSPC		# VB03 DISPLAY OCT COMP 3 (R1)
		CADR	DSPAB		# VB04 DISPLAY OCT COMP 1,2 (R1,R2)
		CADR	DSPABC		# VB05 DISPLAY OCT COMP 1,2,3 (R1,R2,R3)
		CADR	DECDSP		# VB06 DECIMAL DISPLAY
		CADR	DSPDPDEC	# VB07 DP DECIMAL DISPLAY (R1,R2)
		CADR	VBRQWAIT	# VB10 REQUEST WAITLIST
		CADR	MONITOR		# VB11 MONITOR OCT COMP 1 (R1)
		CADR	MONITOR		# VB12 MONITOR OCT COMP 2 (R1)
		CADR	MONITOR		# VB13 MONITOR OCT COMP 3 (R1)
		CADR	MONITOR		# VB14 MONITOR OCT COMP 1,2 (R1,R2)
		CADR	MONITOR		# VB15 MONITOR OCT COMP 1,2,3 (R1,R2,R3)
		CADR	MONITOR		# VB16 MONITOR DECIMAL
		CADR	MONITOR		# VB17 MONITOR DP DEC  (R1,R2)
REQEXLOC	CADR	VBRQEXEC	# VB20 REQUEST EXECUTIVE
		CADR	ALOAD		# VB21 LOAD COMP 1 (R1)
		CADR	BLOAD		# VB22 LOAD COMP 2 (R2)
		CADR	CLOAD		# VB23 LOAD COMP 3 (R3)
		CADR	ABLOAD		# VB24 LOAD COMP 1,2 (R1,R2)
		CADR	ABCLOAD		# VB25 LOAD COMP 1,2,3 (R1,R2,R3)
		CADR	DSPALARM	# VB26 SPARE
		CADR	DSPALARM	# VB27 SPARE
		CADR	DSPALARM	# VB30 SPARE
		CADR	DSPBANK		# VB31 BANK DISPLAY
		CADR	BUMP		# VB32 C(R2) INTO R3, C(R1) INTO R2
		CADR	VBPROC		# VB33 PROCEED WITHOUT DATA
		CADR	VBTERM		# VB34 TERMINATE CURRENT TEST OR LOAD REQ
		CADR	VBRELDSP	# VB35 RELEASE DISPLAY SYST
		CADR	SLAPB		# VB36 FRESH START
ENDVBFAN	CADR	MMCHANG		# VB37 CHANGE MAJOR MODE



# THE LIST2 VERBFAN IS LOCATED IN BANK 05.


# NNADTAB CONTAINS A RELATIVE ADDRESS, IDADDREL(IN LOW 10 BITS), REFERRING
# TO WHERE 3 CONSECUTIVE ADDRESSES ARE STORED (IN IDADDTAB).
# MIXNOUN GETS DATA AND STORES IN MIXTEMP,+1,+2. IT SETS NOUNADD FOR
# MIXTEMP.

MIXNOUN		INDEX	NOUNREG
		CAF	NNADTAB
		CCS	A
		TC	+4		# +  IN USE
		TC	GODSPALM	# +0  NOT IN USE
		TC	+2		# -  IN USE
		TC	+1		# -0  IN USE
		CAF	TWO
		TS	MIXBR
		CS	SIX
		AD	VERBREG
		CCS	A		# AVOID MIXNOUN SWAP FOR OTHER THAN
		TC	VERBFAN		#	DISPLAY VERBS
		LOC	+1
		TC	+1
		CAF	TWO
MIXNN1		TS	NOUNTEM
		AD	MIXAD
		TS	NOUNADD		# SET NOUNADD TO MIXTEMP + K
		TC	SETIDADD
		AD	NOUNTEM
		INDEX	A
		CAF	IDADDTAB
		MASK	LOW10		# ESUBK (NO DP)  OR  (ESUBK)+1    FOR DP
		INDEX	A		# PICK UP C(ESUBK)  NOT DP
		CS	0		# OR C((ESUBK)+1)  FOR DP MINOR PART
		CS	A
		INDEX	NOUNADD
		TS	0		# STORE IN MIXTEM + K
		CCS	NOUNTEM
		TC	MIXNN1
		TC	VERBFAN

MIXAD		TC	MIXTEMP

SETIDADD	CAF	LOW10
		INDEX	NOUNREG
		MASK	NNADTAB
		TS	IDADDTEM
		TC	Q

REQDATX		CS	Q
		TS	REQRET
		CAF	R1D1
		TC	REQCOM
REQDATY		CS	Q
		TS	REQRET
		CAF	R2D1
		TC	REQCOM
REQDATZ		CS	Q
		TS	REQRET
		CAF	R3D1
REQCOM		TS	DSPCOUNT
		CAF	L5BLANK
		TC	SWCALL
		CAF	FLONAD
		TC	SWCALL
		TC	ENTEXIT

L5BLANK		CADR	5BLANK
FLONAD		CADR	FLASHON
LFLASHOF	CADR	FLASHOFF

# IF NVSUB INITIATED LOAD, SET CADRSTOR TO -0 TO TELL RECALTST TO RELEASE
# DISPLAY IF ENDIDLE WAS NOT USED. (NECESSARY FOR DATAWAIT)



		TS	NOUNREG
UPDATNN		XCH	Q
		TS	UPDATRET
		INDEX	NOUNREG
		CAF	NNADTAB
		CCS	A
		AD	ONE		# NORMAL
		TC	PUTADD
		TC	PUTADD +1	# MATBS	 DONT CHANGE NOUNADD
		TC	PUTADD +1	# MATBI	 DONT CHANGE NOUNADD
PUTADD		TS	NOUNADD
		CAF	ND1
		TS	DSPCOUNT
		CS	NOUNREG
		TC	UPDAT1

		TS	VERBREG
UPDATVB		XCH	Q
		TS	UPDATRET
		CAF	VD1
		TS	DSPCOUNT
		CS	VERBREG
UPDAT1		CS	A
		TC	DSP2BIT
		TC	UPDATRET



GODSPALM	CAF	VERBTAB
		TC	BANKJUMP


# 	NOUN TABLES
# NOUN CODE L/55, NORMAL CASE. NOUN CODE G/E 55, MIXED NOUN CASE.
# FOR NORMAL CASE, NNADTAB CONTAINS ONE MACHINE ADDRESS FOR EACH NOUN.
# +0 INDICATES NOUN NOT USED.   - ENTRY IDICATES MACHINE ADDRESS TO BE
# SPECIFIED.      -0 ENTRY INDICATES AUGMENT OF LAST MACHINE ADDRESS.
#
# FOR MIXED CASE, NNADTAB CONTAINS ONE INDIRECT ADDRESS(IDADDREL) IN LOW
# 10 BITS, AND THE COMPONENT CODE NUMBER IN THE HIGH 5 BITS.
#
# NNTYPTAB IS A PACKED TABLE OF THE FORM MMMMMNNNNNPPPPP.
#
# FOR THE NORMAL CASE, M-S ARE THE COMPONENT CODE NUMBER.
#		       N-S ARE THE SF ROUTINE CODE NUMBER.
#		       P-S ARE THE SF CONSTANT CODE NUMBER.
#
# MIXED CASE,M-S ARE THE SF CONSTANT3 CODE NUMBER	3 COMPONENT CASE
#	     N-S ARE THE SF CONSTANT2 CODE NUMBER
#	     P-S ARE THE SF CONSTANT1 CODE NUMBER
#	     N-S ARE THE SF CONSTANT2 CODE NUMBER	2 COMPONENT CASE
#	     P-S ARE THE SF CONSTANT1 CODE NUMBER
#	     P-S ARE THE SF CONSTANT1 CODE NUMBER	 1 COMPONENT CASE
#
# THERE IS ALSO AN INDIRECT ADDRESS TABLE(IDADDTAB) FOR MIXED CASE ONLY.
# ENTRY IS OF FORM RRRRREEEEEEEEEE. IDADDREL IS THE RELATIVE ADDRESS OF
# THE FIRST OF THESE ENTRIES.
# R-S ARE THE SF ROUTINE CODE NUMBERS FOR COMPONENT K
# E-S ARE THE MACHINE ADDRESS FOR COMPONENT K
# THERE IS ONE ENTRY IN THIS TABLE FOR EACH COMPONENT OF A MIXED NOUN
# THEY ARE LISTED IN ORDER OF ASCENDING K.
#
# IN OCTAL DISPLAY AND LOAD (OCT OR DEC) VERBS, EXCLUDE USE OF VERBS WHOSE
# COMPONENT NUMBER IS GREATER THAN THE NUMBER OF COMPONENTS IN NOUN.
# ALL MACHINE ADDRESS TO BE SPECIFIED NOUNS ARE 1 COMPONENT.
# ONLY EXCEPTION IS NOUN 01 TO ALLOW OCTAL DISPLAYS AND LOADS OF
# AN UNCONTOLLED NUMBER OF COMPONENTS.
#
#
#
# IN MULTI-COMPONENT LOAD VERBS, NO MIXING OF OCTAL AND DECIMAL DATA
# COMPONENT WORDS IS ALLOWED. ALARM IF VIOLATION.
#
# IN DECIMAL LOADS OF DATA, 5 NUMERICAL CHARACTERS MUST BE KEYED IN
# BEFORE EACH ENTER. IF NOT, ALARM.


# 	DISPLAY VERBS
DSPABC		INDEX	NOUNADD
		CS	2
		TS	BUF +2
DSPAB		INDEX	NOUNADD
		CS	1
		TS	BUF +1
DSPA		INDEX	NOUNADD
		CS	0
DSPCOM1		TS	BUF
		TC	DSPCOM2
DSPB		INDEX	NOUNADD
		CS	1
		TC	DSPCOM1
DSPC		INDEX	NOUNADD
		CS	2
		TC	DSPCOM1
DSPCOM2		CS	TWO		# A  B  C  AB  ABC
		AD	VERBREG		# -1 -0 +1 +2  +3   IN A
		CCS	A		# +0 +0 +0 +1  +2    IN A AFTER CCS
		TC	DSPCOM3
		TC	ENTEXIT
		TC	+1
DSPCOM3		TS	DISTEM		# +0,+1,+2 INTO DISTEM
		INDEX	A
		CAF	R1D1
		TS	DSPCOUNT
		INDEX	DISTEM
		CS	BUF
		TC	DSPOCTWD
		XCH	DISTEM
		TC	DSPCOM2 +2

COMPICK		ADRES	NNTYPTAB
		ADRES	NNADTAB

DECDSP		INDEX	MIXBR		# NORMAL		MIXED
		CAF	COMPICK -1	# ADRES NNTYPTAB	ADRES NNADTAB
		AD	NOUNREG
		INDEX	A
		XCH	0
		MASK	HI5		# GET HI5 OF NNTYPTAB(NORM) OF NNADTAB(MIX)
		TC	LEFT5
		TS	DECOUNT		# COMP NUMBER INTO DECOUNT
DSPDCGET	TS	DECTEM		# PICKS UP DATA
		AD	NOUNADD		# DECTEM  1COMP +0, 2COMP +1, 3COMP +2
		INDEX	A
		CS	0
		INDEX	DECTEM
		TS	XREG		# CANT USE BUF SINCE DMP USES IT.
		CCS	DECTEM
		TC	DSPDCGET	# MORE TO GET
DSPDCPUT	CAF	ZERO		# DISPLAYS DATA
		TS	MPAC +1		# DECOUNT 1COMP +0, 2COMP +1, 3COMP +2
		TS	MPAC +2
		INDEX	DECOUNT
		CAF	R1D1
		TS	DSPCOUNT
		INDEX	DECOUNT
		CS	XREG
		TS	MPAC
		TC	SFCONUM		# SF CON NUMB IN A
		TS	SFTEMP2
		INDEX	A	
		CAF	SFOUTAB1
		TS	SFTEMP1
		INDEX	SFTEMP2
		CAF	SFOUTAB2
		TS	SFTEMP2
		INDEX	MIXBR
		TC	+0
		TC	DSPSFNOR
		TC	SFRUTMIX
		TC	DECDSP3

DSPSFNOR	TC	SFRUTNOR
		TC	DECDSP3

DSPDCEND	CAF	DECCADR		# ALL SFOUT ROUTINES END HERE
		TC	SWCALL
		CCS	DECOUNT
		TC	+2
		TC	ENTEXIT
		TS	DECOUNT
		TC	DSPDCPUT	# MORE TO DISPLAY

DECCADR		CADR	DSPDECWD



DECDSP3		INDEX	A
		CAF	SFOUTABR
		TC	BANKJUMP

SFOUTABR	CADR	DSPDCEND
		CADR	DEGOUTSF
		CADR	ARTOUTSF
		CADR	DP1OUTSF
		CADR	DP2OUTSF
		CADR	OPDEGOUT
ENDRTOUT	EQUALS



# 	THE FOLLOWING IS A TYPICAL SF ROUTINE. IT USES MPAC. LEAVES RESU
# LTS IN MPAC, MPAC+1. ENDS WITH TC DSPDCEND



		SETLOC	INCNOUT +5

#    DEGOUTSF SCALES BY .18 THE LOW 14 BITS OF ANGLE , ADDING .18 FOR
# NUMBERS IN THE NEGATIVE (AGC) RANGE.

DEGOUTSF	CAF	ZERO
		TS	MPAC +2		# SET INDEX FOR FULL SCALE
		TC	FIXRANGE
		TC	+2		# NO AUGMENT NEEDED (SFTEMP1 AND 2 ARE 0)
		TC	SETAUG		# SET AUGMENTER ACCORDING TO C(MPAC +2)
		TC	DEGCOM

#   OPDEGOUT SCALES BY .09 FOR ONE RANGE AND BY .45 FOR THE OTHER.
# FOR THE .45 RANGE A .2 BIAS IS ALSO ADDED.


OPDEGOUT	CAF	BIT13
		MASK	WASOPSET
		CCS	A
		TC	+3
		CAF	ONE		# 180 DEG RANGE
		TC	DEGOUTSF +1
		CCS	MPAC		# 90 DEG RANGE
		XCH	MPAC		# IF POS OR POS 0 THEN ADD BIAS AND
		TC	+3		# CORRECT FOR POSSIBLE OVERFLOW
		TC	NEGOPT		# IF NEG NON ZERO
		AD	NEG1		# IF NEG ZERO SUBTRACT 1
		AD	20BIAS
BIASCOM		TS	MPAC		# TEST FOR OVERFLOW
		TC	+4		# NO OVFLOW
		CAF	BIT15		# IF OVFLOW
		AD	MPAC
		TS	MPAC
		CAF	TWO		# SET MULTIPLIER TO .45
		TC	DEGOUTSF +1

NEGOPT		XCH	MPAC		# NEGATIVE CASE
		AD	20BIAS
		CCS	A
		TC	BIASCOM		# IF POS THEN SUBTRACT 1 BECAUSE OF 2SCOM
		LOC	+1
		AD	ONE		# IF NEG RESTORE SUM
		COM			# IF NEG 0 LEAVE NEG 0
		TC	BIASCOM

SETAUG		INDEX	MPAC +2		# LOADS SFTEMP1 AND SFTEMP2 WITH THE
		CAF	DEGTAB2		# DP AUGMENTER CONSTANT
		TS	SFTEMP2
		INDEX	MPAC +2
		CAF	DEGTAB1
		TS	SFTEMP1
		TC	Q

FIXRANGE	XCH	Q		# IF MPAC IS + RETURN TO L+1
		TS	WDRET		# IF MPAC IS - RETURN TO L+2 AFTER
		CCS	MPAC		# MASKING OUT THE SIGN BIT
		TC	WDRET
		TC	WDRET
		TC	+1
		CS	BIT15
		MASK	MPAC
		TS	MPAC
		INDEX	WDRET
		TC	1

DEGCOM		INDEX	MPAC +2		# LOADS MULTIPLIER, DOES SHORTMP, AND
		CAF	DEGTAB2		# ADDS AUGMENTER.
		TS	MPAC +1
		INDEX	MPAC +2
		CAF	DEGTAB1
		XCH	MPAC		# ADJUSTED ANGLE IN A
		TC	SHORTMP
		TC	DAD
		ADRES	SFTEMP1
		TC	SCOUTEND



DEGTAB1		OCT	05605		# HIGH PART OF 	.18
		OCT	02702		#		.09
		OCT	16314		# .45

DEGTAB2		OCT	03656		# LOW PART OF	.18
		OCT	21727		# 		.09
		OCT	31463		# .45

20BIAS		OCT	16040		# 20 DEG BIAS FOR OPTICS

ARTOUTSF	XCH	SFTEMP2		# ASSUMES POINT AT LEFT OF DP SFCON.
		TS	MPAC +1
		XCH	SFTEMP1		# HI PART OF SFCONSTANT
		XCH	MPAC
		TC	SHORTMP
SCOUTEND	CAF	DSPDCLOC
		TC	BANKJUMP
DSPDCLOC	CADR	DSPDCEND


		SETLOC	ENDRTOUT

DP1OUTSF	TC	DPOUT		# SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
		XCH	MPAC +2		# IN SFTEMP1, SFTEMP2.  THEN SCALE RESULT
		XCH	MPAC +1		# BY B14.
		TS	MPAC
		TC	DSPDCEND



DP2OUTSF	TC	DPOUT		# SCALES MPAC, MPAC +1 BY DP SCALE FACTOR
		TC	DSPDCEND



# DPOUT PICKS UP FRESH DATA FOR BOTH HI AND LO COMPONENTS.
# THIS IS NEEDED FOR TIME DISPLAY.

DPOUT		XCH	Q
		TS	OVFIND
		INDEX	MIXBR
		TC	+0
		TC	DPOUTNOR
		TC	SETIDADD
		AD	DECOUNT
		INDEX	A		# GET IDADDTAB ENTRY FOR COMPONENT K
		CAF	IDADDTAB	# OF NOUN.
		MASK	LOW10		# E SUBK
DPOUTCOM	TS	MPAC +2
		INDEX	MPAC +2
		CS	0		# MIXED		NORMAL
		COM			# C(ESUBK)	C(E)
		TS	MPAC
		INDEX	MPAC +2
		CS	1		# C((E SUBK)+1)	C(E+1)
		COM
		TS	MPAC +1
		CCS	A		# TEST IF LOW PART +0 IN CASE PICKING UP
		TC	+3		# TIME, IF SO COULD HAVE OVFLOD, SO GET
		TC	+0CASE		# UP TO DATE HIGH PART. IF NOT +0, NO
		TC	+1		# PROBLEM.
+0RET		TC	DMP
		XCADR	SFTEMP1
		CAF	TPCADR
		TC	SWCALL
		TC	OVFIND

+0CASE		INDEX	MPAC +2
		AD	0
		TS	MPAC
		TC	+0RET

DPOUTNOR	CS	NOUNADD
		CS	A		# E
		TC	DPOUTCOM

# THIS IS A SPECIAL PURPOSE VERB FOR DISPLAYING A DOUBLE PRECISION AGC
# WORD AS 10 DECIMAL DIGITS ON THE AGC DISPLAY PANEL.  IT CAN BE USED WITH
# ANY NOUN, EXCEPT MIXED NOUNS. IT DISPLAYS THE CONTENTS
# OF THE REGISTER NOUNADD IS POINTING TO.  IF USED WITH NOUNS WHICH ARE
# INHERENTLY NOT DP SUCH AS THE CDU COUNTERS THE DISPLAY WILL BE GARBAGE.
# DISPLAY IS IN R1 AND R2 ONLY WITH THE SIGN IN R1.



DSPDPDEC	INDEX	MIXBR
		TC	+0
		TC	+2		# NORMAL NOUN
		TC	GODSPALM
		INDEX	NOUNADD
		CS	0
		COM
		TS	MPAC		# LOAD MPAC WITH HIGH ORDER PART
		INDEX	NOUNADD
		CS	1
		COM
		TS	MPAC +1		# LOAD MPAC+1 WITH LOW ORDER PART
		CAF	R1D1
		TS	DSPCOUNT
		CAF	ZERO
		TS	MPAC +2
		CAF	TPCADR
		TC	SWCALL
		CAF	2DECCADR
		TC	SWCALL
ENDDPDEC	TC	ENTEXIT

TPCADR		CADR	TPAGREE
2DECCADR	CADR	DSP2DEC


# 	LOAD VERBS


ABCLOAD		CAF	VBSP1LD
		TC	UPDATVB -1
		TC	REQDATX
		CAF	VBSP2LD
		TC	UPDATVB -1
		TC	REQDATY
		CAF	VBSP3LD
		TC	UPDATVB -1
		TC	REQDATZ



PUTXYZ		CAF	ZERO		# X COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	0
		CAF	ONE		# Y COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	1
		CAF	TWO		# Z COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	2
		TC	LOADLV

ABLOAD		CAF	VBSP1LD
		TC	UPDATVB -1
		TC	REQDATX
		CAF	VBSP2LD
		TC	UPDATVB -1
		TC	REQDATY
PUTXY		CAF	ZERO		# X COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	0
		CAF	ONE		# Y COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	1
		TC	LOADLV

ALOAD		TC	REQDATX
		CAF	ZERO		# X COMP
		TC	PUTCOM
		INDEX	NOUNADD
		TS	0
		TC	LOADLV

BLOAD		CAF	BIT15		# SET CLPASS FOR PASS0 ONLY
		TS	CLPASS
		TC	REQDATY
		CAF	ONE
		TC	PUTCOM
		INDEX	NOUNADD
		TS	1
		TC	LOADLV

CLOAD		CAF	BIT15		# SET CLPASS FOR PASS0 ONLY
		TS	CLPASS
		TC	REQDATZ
		CAF	TWO
		TC	PUTCOM
		INDEX	NOUNADD
		TS	2
		TC	LOADLV

LOADLV		CAF	ZERO
		TS	DECBRNCH
		CS	ZERO
		TS	LOADSTAT
		CS	VD1		# TO BLOCK NUMERICAL CHARACTERS AND
		TS	DSPCOUNT	# CLEARS AFTER A COMPLETED LOAD
		CAF	RECALOC		# AFTER COMPLETED LOAD, GO TO RECALTST
		TC	BANKJUMP	# TO SEE IF THERE IS RECALL FROM ENDIDLE.

RECALOC		CADR	RECALTST

VBSP1LD		OCT	21		# VB21 = ALOAD
VBSP2LD		OCT	22		# VB22 = BLOAD
VBSP3LD		OCT	23		# VB23 = CLOAD


SFRUTNOR	XCH	Q		# GETS SF ROUTINE NUMBER FOR NORMAL CASE
		TS	EXITEM
		CAF	MID5
		INDEX	NOUNREG
		MASK 	NNTYPTAB
		TC	RIGHT5
		TC	EXITEM		# SF ROUTINE NUMBER IN A

SFRUTMIX	XCH	Q		# GETS SF ROUTINE NUMBER FOR MIXED CASE
		TS	EXITEM
		TC	SETIDADD
		AD	DECOUNT
		INDEX	A		# GET IDADDTAB ENTRY FOR COMPONENT K
		CAF	IDADDTAB	# OF NOUN.
		MASK	HI5
		TC	LEFT5
		TC	EXITEM		# SF ROUTINE NUMBER IN A

SFCONUM		XCH	Q		# GETS SF CONSTANT NUMBER
		TS	EXITEM
		INDEX	MIXBR
		TC	+0
		TC	CONUMNOR	# NORMAL NOUN
		INDEX	DECOUNT		# MIXED NOUN
		CAF	LOW5
		INDEX	NOUNREG
		MASK	NNTYPTAB
		INDEX	DECOUNT
		INDEX	DISPLACE
		TC	0
# DO TC SFRET (DECOUNT=0),DO TC RIGHT5(DECOUNT=1), DO TC LEFT5 (DECOUNT=2)
SFRET		TC	EXITEM		# SF CON NUMBER IN A

DISPLACE	TC	SFRET
		TC	RIGHT5
		TC	LEFT5

CONUMNOR	CAF	LOW5		# NORMAL NOUN ALWAYS GETS LOW 5 OF
		INDEX	NOUNREG
		MASK	NNTYPTAB
		TC	EXITEM



PUTCOM		TS	DECOUNT
		XCH	Q
		TS	DECRET
		CS	NOUNREG
		AD	MIXCON
		CCS	A
		CAF	ONE
		TC	PUTCOM1 -1	# NORMAL NOUN
# IF MIXNOUN, PLACE ADDRESS FOR COMPONENT K INTO NOUNADD
		TC	+1
		CAF	TWO
		TS	MIXBR
		TC	SETIDADD
		AD	DECOUNT
		INDEX	A		# GET IDADDTAB ENTRY FOR COMPONENT K
		CAF	IDADDTAB	# OF NOUN.
		MASK	LOW10		# EK	FOR CURRENT NOUN
		EXTEND
		SU	DECOUNT
		TS	NOUNADD		# PLACE (E SUB K) - K INTO NOUNADD
		TC	PUTCOM1
		TS	MIXBR
PUTCOM1		CAF	ZERO
		TS	OVFIND
		INDEX	DECOUNT
		XCH	XREGLP
		TS	MPAC +1
		INDEX	DECOUNT
		XCH	XREG
		TS	MPAC
		CCS	DECBRNCH
		TC	PUTDECSF	# +  DEC

PUTCOM2		XCH	MPAC
		TC	DECRET

# PUTDECSF FINDS MIXBR AND DECOUNT STILL SET FROM PUTCOM

PUTDECSF	TC	SFCONUM		# SF CON NUMB IN A
		TS	SFTEMP2
		INDEX	A
GTSFIN		CAF	SFINTAB1
		TS	SFTEMP1
		INDEX	SFTEMP2
		CAF	SFINTAB2
		TS	SFTEMP2
		INDEX	MIXBR
		TC	+0
		TC	PUTSFNOR
		TC	SFRUTMIX
		TC	PUTDCSF2
PUTSFNOR	TC	SFRUTNOR

PUTDCSF2	INDEX	A
		CAF	SFINTABR
		TC	BANKJUMP	# SWITCH BANKS FOR EXPANSHION ROOM
SFINTABR	CADR	BINROUND
		CADR	DEGINSF
		CADR	ARTHINSF
		CADR	DPINSF
		CADR	DSPALARM
		CADR	OPTDEGIN
ENDRUTIN	EQUALS



# SCALE FACTORS FOR THOSE ROUTINES NEEDING THEM ARE AVAILABLE IN SFTEMP1.
# ALL SFIN ROUTINES USE MPAC MPAC+1. LEAVE RESULT IN A. END WITH TC DECRET



		SETLOC	SCOUTEND +3

# DEGINSF APPLIES 1000/180 * 5.55555(10) = 5.43434(8)

DEGINSF		TC	DMP		# SF ROUTINE FOR DEC DEGREES
		XCADR	DEGCON1		# MULT BY 5.5  5(10)X2/-3
		CCS	MPAC +1		# THIS ROUNDS OFF MPAC+1 BEFORE SHIFT
		CAF	BIT11		# LEFT 3, AND CAUSES 360.00 TO OF/UF
		TC	+2		# WHEN SHIFTED LEFT AND ALARM.
		CS	BIT11
		AD	MPAC +1
		TC	2ROUND +2
		CAF	SLCALL		# LEFT 1
		TC	SWCALL
DEGINSF2	CAF	SLCALL		# LEFT 2
		TC	SWCALL
		CCS	OVFIND
		TC	DSPALARM
		TC	+2
		TC	DSPALARM
		CAF	SLCALL		# LEFT 3
		TC	SWCALL
		CCS	MPAC
		TC	SIGNFIX		# IF +, GO TO SIGNFIX
		TC	SIGNFIX		# IF +0, GO TO SIGNFIX
		COM			# IF - , USE -MAGNITUDE +1
		TS	MPAC		# IF -0, USE +0
SIGNFIX		CCS	OVFIND
		TC	SGNTO1		# IF OVERFLOW
		TC	ENDSCALE	# NO OVERFLOW/UNDERFLOW
		CCS	MPAC		# IF UF FORCE SIGN TO 0 EXCEPT -180
		LOC	+1
		TC	NEG180
		TC	+1
		XCH	MPAC
		MASK	POSMAX
		TS	MPAC
ENDSCALE	CAF	DECRELOC
		TC	BANKJUMP

NEG180		CS	POSMAX
		TC	ENDSCALE -1

SGNTO1		CS	MPAC		# IF OF FORCE SIGN TO 1
		MASK	POSMAX
		CS	A
		TC	ENDSCALE -1

SLCALL		CADR	SL1 +3
DEGCON1		2DEC	5.555555555 B-3
DEGCON2		2DEC	2.222222222 B-2
NEG.2		OCT	-06250		# = .197753906  I.E. THE BIAS SCALED
DECRELOC	CADR	PUTCOM2

ARTHINSF	TC	DMP		# SCALES MPAC, +1 BY SFTEMP1, SFTEMP2.
		XCADR	SFTEMP1		# ASSUMES POINT BETWEEN HI AND LO PARTS
		XCH	MPAC +2		# OF SFCON. SHIFTS RESULTS LEFT BY 14.
		XCH	MPAC +1		# (BY TAKING RESULTS FROM MPAC+1, MPAC+2)
		XCH	MPAC
		CCS	A
		TC	DSPALARM	# TOO LARGE A LOAD
		TC	BINROUND
		TC	DSPALARM	# TOO LARGE A LOAD
BINROUND	TC	2ROUND
		CCS	OVFIND
		TC	DSPALARM
		TC	ENDSCALE
		TC	DSPALARM



OPTDEGIN	CCS	MPAC		# OPTICS SCALING ROUTINE
		TC	+4		# LOW RANGE   0 TO 90 DEG ALWAYS
		TC	+3
		TC	DSPALARM	# REJECT - INPUT. ALARM
		TC	DSPALARM	# DITTO

		CAF	BIT13
		MASK	WASOPSET
		CCS	A
		TC	OPDEGIN2
		TC	DMP		# RANGE IS 180 DEG
		XCADR	DEGCON1
		CAF	SLCALL
		TC	SWCALL
		TC	DEGINSF +2

OPDEGIN2	XCH	MPAC		# RANGE IS 90 DEG
		AD	NEG.2		# SUBTRACT BIAS
		TS	MPAC
		TC	DMP		# MULT BY 100 / 45  B-2
		XCADR	DEGCON2
		CAF	BIT12		# ROUND AS IN DEGINSF
		AD	MPAC +1
		TC	2ROUND +2
		TC	DEGINSF2

DPINSF		TC	DMP		# SCALES MPAC, MPAC +1 BY SFTEMP1,
		XCADR	SFTEMP1		# SFTEMP2.  STORES LOW PART OF RESULT
		XCH	MPAC +2		# IN (E SUBK) +1 OR E+1
		DOUBLE
		TS	MPAC +2
		CAF	ZERO
		AD	MPAC +1
		TC	2ROUND +2
		INDEX	MIXBR		# RETURNS IF NO OF/UF
		TC	+0
		TC	DPINORM
		XCH	DECOUNT		# MIXEDNOUN
		TS	DECOUNT
DPINCOM		AD	NOUNADD		#     MIXED		  NORMAL
		TS	Q		#   E SUBK	      E
		XCH	MPAC +1
		INDEX	Q
		TS	1		# PLACE LOW PART IN
		TC	ENDSCALE	# (E SUBK) +1	 MIXED
DPINORM		CAF	ZERO		# E +1	       NORMAL
		TC	DPINCOM


2ROUND		XCH	MPAC +1
		DOUBLE
		TS	MPAC +1
		TC	Q		# IF MPAC+1 DOES NOT OF/UF
		AD	MPAC
		TS	MPAC
		TC	Q		# IF MPAC DOES NOT OF/UF
		TS	OVFIND
2RNDEND		TC	Q


# MONITOR ALLOWS OTHER KEYBOARD ACTIVITY. IT IS ENDED BY VERB TERMINATE,
# ANY NVSUB CALL THAT PASSES THE DSPLOCK, OR ANOTHER MONITOR.
#
# MONITOR ACTION IS SUSPENDED, BUT NOT ENDED, BY ANY KEYBOARD ACTION,
# EXCEPT ERROR LIGHT RESET. IT BEGINS AGAIN WHEN KEY RELEASE IS PERFORMED.
# MONITOR SAVES THE NOUN AND APPROPRIATE DISPLAY VERB IN MONSAVE. IT SAVES
# NOUNADD IN MONSAVE1, IF NOUN = MACHINE ADDRESS TO BE SPECIFIED. BIT 15 OF
# MONSAVE1 IS THE KILL MONITOR SIGNAL (KILLER BIT). 
#
# MONSAVE INDICATES IF MONITOR IS ON (+=ON, +0=OFF)
# IF MONSAVE IS +, MONITOR ENTERS NO REQUEST, BUT TURNS KILLER BIT OFF.
# IF MONSAVE IS +0, MONITOR ENTERS REQUEST AND TURNS KILLER BIT OFF.
#
# NVSUB AND VB=TERMINATE TURN KILL MONITOR BIT ON.
#
# IF KILLER BIT IS ON, MONREQ ENTERS NO FURTHER REQUESTS, ZEROS MONSAVE
# AND MONSAVE1 (TURNING OFF KILLER BIT).
#
#
#
# MONITOR DOSENT TEST FOR MATBS SINCE NVSUB CAN HANDLE INTERNAL MATBS NOW

		SETLOC	ENDRUTIN

MONITOR		CS	BIT15
		MASK	NOUNADD
MONIT2		TS	MPAC +1		# TEMP STORAGE
		CAF	LOW6
		MASK	VERBREG
		TC	LEFT5
		TS	CYL
		XCH	CYL
		AD	NOUNREG
		TS	MPAC		# TEMP STORAGE
		CS	GRABLOCK	# NEITHER CASE SEARCHES LIST.
		AD	TWO
		CCS	A
		TC	RELDSP1		# GRABLOCK=0,1. +0 INTO DSPLOCK AND
		TC	+4		# TURN OFF KEY RLSE LIGHT.
		LOC	+1
		CAF	ZERO		# GRABLOCK=2. +0 INTO DSPLOCK
		TS	DSPLOCK		# AND LEAVE KEY RELEASE LIGHT ALONE
		INHINT
		CCS	MONSAVE
		TC	+4		# IF MONSAVE WAS +, NO REQUEST
		CAF	ONE		# IF MONSAVE WAS 0, REQUEST MONREQ
		TC	WAITLIST
		CADR	MONREQ
		XCH	MPAC
		TS	MONSAVE		# PLACE MONITOR VERB AND NOUN INTO MONSAVE
		XCH	MPAC +1
		TS	MONSAVE1	# ZERO THE KILL MONITOR BIT
		RELINT
		TC	ENTRET



MONREQ		CCS	MONSAVE1
		TC	+4		# IF KILLER BIT = 0, ENTER REQUESTS
		TC	+3		# IF KILLER BIT = 0, ENTER REQUESTS
		TC	KILLMON		# IF KILLER BIT = 1, NO REQUESTS
		TC	KILLMON		# IF KILLER BIT = 1, NO REQUESTS
		CAF	MONDEL
		TC	WAITLIST	# ENTER WAITLIST REQUEST FOR MONREQ
		CADR	MONREQ
		CAF	PRIO30
		TC	NOVAC		# ENTER EXEC REQUEST FOR MONDO
		CADR	MONDO
		TC	TASKOVER

KILLMON		CAF	ZERO		# ZERO MONSAVE AND TURN KILLER BIT OFF
		TS	MONSAVE
		TS	MONSAVE1	# TURN OFF KILL MONITOR BIT.
		TC	TASKOVER



MONDEL		OCT	62		# FOR 0.5 SEC MONITOR INTERVALS



MONDO		CCS	MONSAVE1	# CALLED BY EXEC
		TC	+4		# IF KILLER BIT = 0, CONTINUE
		TC	+3		# IF KILLER BIT = 0, CONTINUE
		TC	ENDOFJOB	# IN CASE TERMINATE CAME SINCE LAST MONREQ
		TC	ENDOFJOB	# IN CASE TERMINATE CAME SINCE LAST MONREQ
		CCS	DSPLOCK
		TC	MONBUSY		# NVSUB IS BUSY
		CAF	LOW6		# NVSUB IS AVAILABLE
		MASK	MONSAVE
		TS	NVTEMP
		TC	NVSUBMON	# PLACE NOUN INTO NOUNREG AND DISPLAY IT
		TC	ENDOFJOB	# IN CASE OF ALARM DURING DISPLAY
		CAF	MONMASK
		MASK	MONSAVE		# CHANGE MONITOR VERB TO DISPLAY VERB
		TC	RIGHT5
		TS	CYR
		XCH	CYR
		TS	VERBREG
		CAF	MONBACK		# SET RETURN TO PASTEVB AFTER DATA DISPLAY
		TS	ENTRET
		CS	BIT15
		MASK	MONSAVE1
		TS	NOUNADD
		TC	TESTNN

PASTEVB		CAF	MID6
		MASK	MONSAVE
		TS	NVTEMP		# PLACE MONITOR VERB INTO VERBREG AND
		TC	NVSUBMON	#	DISPLAY IT.
		TC	+1		# IN CASE OF ALARM DURING DISPLAY
ENDPASTE	TC	ENDOFJOB

MONMASK		OCT	700
MONBACK		ADRES	PASTEVB

MONBUSY		TC	RELDSPON	# TURN KEY RELEASE LIGHT
		TC	ENDOFJOB

# DSPBANK IS USED TO DISPLAY (IN OCTAL) ANY FIXED REGISTER IN BANK.
# IT IS USED WITH NOUN = MACHINE ADDRESS TO BE SPECIFIED. THE CADR OF THE
# DESIRED LOCATION IS THEN PUNCHED IN. 

DSPBANK		CAF	R1D1
		TS	DSPCOUNT
		CS	NOUNADD
		CS	A
		TC	DATACALL
		TC	DSPOCTWD
		TC	ENDOFJOB



		SETLOC	2RNDEND +1

#  DSPDECWD CONVERTS C(MPAC) AND C(MPAC +1)TO A SIGN AND 5 CHAR DECIMAL
# STARTING IN LOC SPECIFIED IN DSPCOUNT

DSPDECWD	XCH	Q		# USES SHORTMP THROUGHOUT
		TS	WDRET
		CCS	MPAC
		TC	+7
		TC	+6
		AD	ONE
		TS	MPAC
		TC	-ON
		CS	MPAC +1
		TC	+3
		TC	+ON
		XCH	MPAC +1
		AD	DECROUND
		TS	MPAC +1
		CAF	ZERO
		AD	MPAC
		TS	MPAC
		TC	+4
		CAF	POSMAX
		TS	MPAC
		TS	MPAC +1
		CAF	FOUR
DSPDCWD1	TS	WDCNT
		CAF	BINCON
		TC	SHORTMP
TRACE1		INDEX	MPAC
		CAF	RELTAB
		MASK	LOW5
		TS	CODE
		CAF	ZERO
		XCH	MPAC +2
		XCH	MPAC +1
		TS	MPAC
		XCH	DSPCOUNT
TRACE1S		TS	COUNT
		CCS	A		# DECREMENT DSPCOUNT EXCEPT AT +0
		TS	DSPCOUNT
		TC	DSPIN
		CCS	WDCNT
		TC	DSPDCWD1
		CS	VD1
		TS	DSPCOUNT
		TC	WDRET

DECROUND	OCT	02476



# DSP2DEC CONVERTS C(MPAC) AND C(MPAC+1) INTO A SIGN AND 10 CHAR DECIMAL
# STARTING IN THE LOC SPECIFIED IN DSPCOUNT.

DSP2DEC		XCH	Q
		TS	WDRET
		CAF	ZERO
		TS	CODE
		CAF	THREE
		TC	11DSPIN		# -R2 OFF
		CAF	FOUR
		TC	11DSPIN		# +R2 OFF
		CCS	MPAC
		TC	+8D
		TC	+7
		AD	ONE
		TS	MPAC
		TC	-ON
		CS	MPAC +1
		TS	MPAC +1
		TC	+2
		TC	+ON
		CAF	R2D1
END2DEC		TC	DSPDCWD1



		SETLOC	DSPBANK +7

# DSPOCTWD DISPLAYS C(A) UPON ENTRY AS A 5 CHAR OCT STARTING IN THE DSP
# CHAR SPECIFIED IN DSPCOUNT. IT STOPS AFTER 5 CHAR HAVE BEEN DISPLAYED.

DSPOCTWD	TS	CYL
		XCH	Q
		TS	WDRET
		XCH	DSPCOUNT
		AD	BIT14		# TO BLANK SIGNS
		TS	DSPCOUNT
		CAF	FOUR
WDAGAIN		TS	WDCNT
		CS	CYL
		CS	CYL
		CS	CYL
		CS	A
		MASK	DSPMSK
		INDEX	A
		CAF	RELTAB
		MASK	LOW5
		TS	CODE
		XCH	DSPCOUNT
		TS	COUNT
		CCS	A		# DECREMENT DSPCOUNT EXCEPT AT +0
		TS	DSPCOUNT
		CAF	OCTINLOC
		TC	BANKJUMP
OCTBACK		CCS	WDCNT
		TC	WDAGAIN		# +
DSPLV		CS	VD1		# TO BLOCK NUMERICAL CHARACTERS, CLEARS,
		TS	DSPCOUNT	# AND SIGNS AFTER A COMPLETED DISPLAY.
		TC	WDRET

OCTINLOC	CADR	DSPOCTIN
DSPMSK		=	SEVEN



# DSP2BIT DISPLAYS C(A) UPON ENTRY AS A 2 CHAR OCT BEGINNING IN THE DSP
# LOC SPECIFIED IN DSPCOUNT BY PRE CYCLING RIGHT C(A) AND USING THE LOGIC
# OF THE 5 CHAR OCTAL DISPLAY

DSP2BIT		TS	CYR
		XCH	Q
		TS	WDRET
		CAF	ONE
		TS	WDCNT
		CS	CYR
		CS	CYR
		XCH	CYR
		TS	CYL
		TC	WDAGAIN +5



# FOR DSPIN PLACE 0/25 OCT INTO COUNT, 5 BIT RELAY CODE INTO CODE. BOTH
# ARE DESTROYED. IF BIT14 OF COUNT IS 1, SIGN IS BLANKED WITH LEFT CHAR.
# FOR DSPIN1 PLACE 0,1 INTO BIT11 OF CODE, 2 INTO COUNT, REL ADDRESS OF
# DSPTAB ENTRY INTO DSREL.

		SETLOC	END2DEC +1

DSPIN		XCH	Q
		TS	DSEXIT
		CAF	LOW5
		MASK	COUNT
		TS	SR
		XCH	SR
		TS	DSREL
		CAF	BIT1
		MASK	COUNT
		CCS	A
		TC	+2		# LEFT IF COUNT IS ODD
		TC	DSPIN1 -1	# RIGHT IF COUNT IS EVEN
		XCH	CODE
		TC	SLEFT5		# DOES NOT USE CYL
		TS	CODE
		CAF	BIT14
		MASK 	COUNT
		CCS	A
		CAF	TWO		# BIT14 = 1, BLANK SIGN
		AD	ONE		# BIT14 = 0, LEAVE SIGN ALONE
		TS	COUNT		# +0 INTO COUNT FOR RIGHT
					# +1 INTO COUNT FOR LEFT (SIGN LEFT ALONE)
					# +3 INTO COUNT FOR LEFT (TO BLANK SIGN)
DSPIN1		INHINT
		INDEX	DSREL
		CCS	DSPTAB
		TC	+2		# IF +
		LOC	+1
		AD	ONE		# IF-
		TS	DSMAG
		INDEX	COUNT
		MASK	DSMSK
		EXTEND
		SU	CODE
		CCS	A
		TC	DFRNT		# IF+
		LOC	+1
		TC	DFRNT		# IF-
		TC	DSLV		# IF -0
DFRNT		INDEX	COUNT
		CS	DSMSK		# MASK WITH 77740,76037, OR 75777
		MASK	DSMAG
		AD	CODE
		CS	A
		INDEX	DSREL
		XCH	DSPTAB
		CCS	A
		TC	INCNOUT
		LOC	+1
DSLV		RELINT
		TC	DSEXIT

DSMSK		OCT	37
		OCT	1740
		OCT	2000
		OCT	3740



# FOR 11DSPIN, PUT REL ADDRESSS OF DSPTAB ENTRY INTO A, 1 IN BIT11 OR 0 IN
# BIT11 OF CODE.

11DSPIN		TS	DSREL
		CAF	TWO
		TS	COUNT
		XCH	Q
		TS	DSEXIT
		TC	DSPIN1

DSPOCTIN	TC	DSPIN		# SO DSPOCTWD DOESNT USE SWCALL
		CAF	+2
		TC	BANKJUMP
ENDSPOCT	CADR	OCTBACK



# DSPALARM FINDS TC NVSUBEND IN ENTRET FOR NVSUB INITIATED ROUTINES.
# ABORT WITH OCT 01501.
# DSPALARM FINDS TC ENDOFJOB IN ENTRET FOR KEYBOARD INITIATED ROUTINES.
# DO TC ENTRET.

CHARALRM	CAF	ENDINST		# ALARMS WHICH MUST DO ENDOFJOBS COME
		TS	ENTRET		# HERE. ALLOWS ENTRET TO BE TEMP ERASABLE

DSPALARM	TC	FALTON		# TURN ON CHECK FAIL LIGHT.
		CS	ONE
		AD	NVQTEM
		TS	NVQTEM
		TC	ENTEXIT		# NOT NVSUB INITIATED.


FLASHON1	CAF	BIT11		# GETS HERE THRU FLASHON(STANDARD LEAD IN)
		TS	CODE
		CAF	FLASHLOC
		TS	DSREL
		CAF	TWO
		TS	COUNT
		TC	DSPIN1
FLASHOF1	CAF	ZERO		# GETS HERE THRU FLASHOFF(STANDARD LEAD IN
		TC	FLASHON1 +1
FLASHLOC	OCT	11



# MMCHANG USES NOUN DISPLAY UNTIL ENTER. THEN IT USES MODE DISP.
# IT GOES TO MODROUT WITH THE NEW M M CODE IN A, BUT NOT DISPLAYED IN
# MM LIGHTS.

		SETLOC	DSP2BIT +10D

MMCHANG		TC	REQMM
		CAF	ZERO
		XCH	NOUNREG
		TS	MPAC
		CAF	ND1
		TS	DSPCOUNT
		CAF	2BLNKLOC
		TC	SWCALL
		XCH	MPAC
		TC	POSTJUMP
		CADR	MODROUTB	# GO THRU STANDARD LOC.



REQMM		CS	Q
		TS	REQRET
		CAF	ND1
		TS	DSPCOUNT
		CAF	ZERO
		TS	NOUNREG
		CAF	2BLNKLOC
		TC	SWCALL
		CAF	FLONAD
		TC	SWCALL
		TC	ENTEXIT
2BLNKLOC	CADR	2BLANK
ENDREQMM	EQUALS



# VBRQEXEC ENTERS REQUEST TO EXEC     FOR ANY ADDRESS WITH ANY PRIORITY.
# IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES PRIO  PRELOADED INTO 
# BITS 10-14 OF FIRST REGISTER OF TEMP AREA, WITH BIT1=0 FOR NOVAC, BIT1
# =1 FOR FINDVAC). THE VERB IS USED WITH NOUN=MACHINE ADDRESS TO BE
# SPECIFIED. CADR JOBADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.

		SETLOC	FLASHLOC +1

VBRQEXEC	CAF	ENDINST
		TS	PROGREG +2
		TC	RELDSP
		CAF	BIT1
		MASK	DSPTEM1		# ********
		CCS	A
		TC	SETVAC		# IF BIT1 =1, FINDVAC
		CAF	TCNOVAC		# IF BIT1 =0, NOVAC
REQEX1		TS	PROGREG		# TC NOVAC OR TC FINDVAC INTO PROGREG
		XCH	NOUNADD
		TS	PROGREG +1	# CADR JOBADDR INTO PROGREG +1
		CS	BIT1
		MASK	DSPTEM1		# *******
		INHINT
		TC	PROGREG

SETVAC		CAF	TCFINDVC
		TC	REQEX1

# VBRQWAIT ENTERS REQUEST TO WAITLIST FOR ANY ADDRESS WITH ANY DELAY.
# IT DOES ENDOFJOB AFTER ENTERING REQUEST.ASSUMES DELAY PRELOADED IN FIRST
# REGISTER OF TEMP AREA. THE VERB IS USED WITH NOUN= MACHINE ADDRESS TO
# BE SPECIFIED. CADR TASKADDR IS PUNCHED IN. DISPLAY SYST IS RELEASED.

VBRQWAIT	CAF	ENDINST
		TS	PROGREG +2	# TC ENDOFJOB INTO PROGREG+2
		TC	RELDSP
		CAF	TCWAIT
		TS	PROGREG		# TC WAITLIST INTO PROGREG
		XCH	NOUNADD
		TS	PROGREG +1	# CADR TASKADDR INTO PROGREG+1
		INHINT
		XCH	DSPTEM1		# DELTA T IN A
ENDRQWT		TC	PROGREG



VBPROC		CAF	ONE		# PROCEED WITHOUT DATA
		TS	LOADSTAT
		TC	RELDSP
		TC	FLASHOFF
		TC	RECALTST	# SEE IF THERE IS ANY RECALL FROM ENDIDLE



VBTERM		TC	KILMONON	# TURN ON KILL MONITOR BIT
		CS	ONE
		TC	VBPROC +1	# TERM VERB SETS LOADSTAT NEG


# FLASH IS TURNED OFF ONLY BY PROCEED WITHOUT DATA, TERMINATE, END OF LOAD


# VBRELDSP TURNS OFF RELEASE DISPLAY SYSTEM LIGHT(AND SEARCHES LIST ONLY
# IF THIS LIGHT WAS TURNED ON BY NVSUBUSY), AND TURNS OFF UPACT LIGHT.

VBRELDSP	CAF	ZERO		# RELEASE DISPLAY SYST
		TS	CODE		# TURN OFF UPACT LIGHT
		CAF	SEVEN
		TC	11DSPIN
		TC	RELDSP		# SEARCHES LIST
		TC	ENDOFJOB



# BUMP SHIFTS WORD DISPLAYED IN R2 TO R3, R1 TO R2. IT BLANKS R1.

BUMP		CAF	FIVE		# R2D5
		TS	DSPCOUNT
		TS	COUNT
		CAF	ONE		# SHIFT DATA OF R2 TO R3, R1 TO R2
		MASK	COUNT
		XCH	COUNT		# +0 INTO COUNT IF EVEN (RIGHT)
		TS	SR		# +1 INTO COUNT IF ODD (LEFT)
		XCH	SR		# DSREL IN A
		INDEX	A
		CCS	DSPTAB
		TC	+2
		LOC	+1
		AD	ONE		# DSMAG IN A
		INDEX 	COUNT
		MASK	DSMSK
		INDEX	COUNT
		TC	+1
		TC	+2		# EVEN(RIGHT)  OK
		TC	RIGHT5		# ODD(LEFT)  SHIFT RIGHT
		TS	CODE
		CS	FIVE
		AD	DSPCOUNT	# DSPCOUNT-5
		CCS	A		# TO PREVENT -0
		AD	ONE
		TC	+2
		LOC	+1
		TS	COUNT
		TC	DSPIN		# CODE ALREADY IN CODE
		CS	DSPCOUNT
		AD	R1D1		# OCT 16
		CCS	A
		XCH	DSPCOUNT	# +, DSPCOUNT L/ OCT 16
		AD	ONE		# INCREMENT DSPCOUNT
		TC	BUMP +1

SWSGN		CAF	ZERO		# -0, DSPCOUNT= OCT 16. DO SIGN SHIFT
		TS	DSPCOUNT
		AD	SWTAB +2	# OCT 3
		INDEX	A		# PICKUP ORDER , DSREL=3,4,5,6.
		CCS	DSPTAB		# 		   (-R2,+R2,-R1,+R1)
		TC	+2
		LOC	+1
		AD	ONE
		MASK	BIT11
		TS	CODE
		INDEX	DSPCOUNT
		CAF	SWTAB		# PUT AWAY ORDER, DSREL= 0,1,3,4.
		TC	11DSPIN		#		   (-R3,+R3,-R2,+R2.)
		CS	DSPCOUNT
		AD	SWTAB +2	# OCT 3
		CCS	A
		XCH	DSPCOUNT	# +, DSPCOUNT L/ 3
		AD	ONE		# INCREMENT DSPCOUNT
		TC	SWSGN +1
		CAF	R1D1		# -0,       DSPCOUNT = 3
		TS	DSPCOUNT
		TC	5BLANK		# BLANKS R1
		TC	ENTEXIT

SWTAB		OCT	0		# -R3
		OCT	1		# +R3
		OCT	3		# -R2
		OCT	4		# +R2



# NVSUB IS USED FOR SUB ROUTINE CALLS FROM WITHIN COMPUTER. IT CAN BE
# USED TO DO ANY THING THE KEYBOARD CAN CALL. PLACE  ...VVVVVVNNNNNN 
# INTO A.      V-S ARE 6 BIT VERB CODE. N-S , 6 BIT NOUN CODE.
#
# NVSUB CAN BE USED WITH MACH ADDR TO BE SPEC BY PLACING THE ADDRESS IN
# MPAC+2 BEFORE THE STANDARD NVSUB CALL.
#
#  NVSUB RETURNS TO 2+ CALLING LOC AFTER PERFORMING TASK, IF DISPLAY
# SYSTEM IS AVAILABLE. THE NEW NOUN AND VERB CODES ARE DISPLAYED.
# IF V:S =0, THE NEW NOUN CODE IS DISPLAYED ONLY(RETURN WITH NO FURTHER
# ACTION). IF N-S =0, THE NEW VERB CODE IS DISPLAYED ONLY(RETURN WITH NO
# FURTHER ACTION).
#
# IT RETURNS TO 1+ CALLING LOC WITHOUT PERFORMING TASK, IF DISPLAY
# SYSTEM IS BLOCKED (NOTHING IS DISPLAYED IN THIS CASE).
# IT DOES TC ABORT (WITH OCT 01501) IF IT ENCOUNTERS A DISPLAY PROGRAM
# ALARM CONDITION BEFORE RETURN TO CALLER.
#
# THE DISPLAY SYSTEM IS BLOCKED BY THE DEPRESSION OF ANY
# KEY, EXCEPT ERROR LIGHT RESET. ALSO BY ENDIDLE.
# 	IT IS RELEASED BY SPECIAL VERB = RELEASE DISPLAY, ALL GO TO VERBS,
# PROCEED WITHOUT DATA, TERMINATE, INITIALIZE EXECUTIVE,
# RECALL PART OF RECALTST IF ENDIDLE WAS USED,
# IN RECALTST IF NVSUB INITIATED LOAD AND ENDIDLE WAS NOT USED,
# VB = REQUEST EXECUTIVE, VB = REQUEST WAITLIST,
# MONITOR SET UP.
#
# A NVSUB CALL THAT PASSES DSPLOCK ENDS OLD MONITOR.
#
# DSPLOCK IS THE INTERLOCK FOR USE OF KEYBOARD AND DISPLAY SYSTEM WHICH
# LOCKS OUT INTERNAL USE WHENEVER THERE IS EXTERNAL KEYBOARD ACTION.
#
# NVSUB IN F/F PLACES 2 + CALLING CADR INTO NVSBCADR, TC NVSUBEND INTO
# ENTRET. IT WILL HANDLE A CALL FROM F/F OK, BUT WILL NOT RESTORE BANKREG
# TO ITS ORIGINAL CONTENTS.

		SETLOC	ENDFAILF
NVSUB		TS	NVTEMP		# IN FIXED FIXED
		CCS	DSPLOCK
		TC	Q		# DSP SYST BLOCKED. RET TO 1+ CALLING LOC
		XCH	Q		# DSP SYST AVAILABLE
		AD	ONE
		TS	NVQTEM
		TC	KILMONON	# TURN ON KILL MONITOR BIT
NVSUBCOM	CAF	NVSUBANK
		XCH	BANKREG
		TS	NVBNKTEM
		TC	NVSUBB		# GO TO NVSUB1 THRU STANDARD LOC
NVSUBANK	CADR	NVSUB1		# BANK NUMB OF NVSUB1

NVSUBMON	XCH	Q		# MONDO COMES HERE
		AD	ONE
		TS	NVQTEM
		TC	NVSUBCOM

NVSUBEND	XCH	NVBNKTEM
		TS	BANKREG
		TC	NVQTEM

		SETLOC	ENDREQMM
NVSUB1		CAF	ENTSET		# IN BANK
		TS	ENTRET		# SET RETURN TO NVSUBEND
		CAF	LOW6
		MASK	NVTEMP
		TS	MPAC		# TEMP STORAGE
		CAF	MID6
		MASK	NVTEMP
		TC	RIGHT5
		TS	CYR
		XCH	CYR
		TS	MPAC +1		# TEMP STORAGE
		CCS	MPAC		# TEST NOUN
		TC	+4		# IF NOUN NOT +0, GO ON
		XCH	MPAC +1
		TC	UPDATVB -1	# IF NOUN = +0, DISPLAY VERB . THEN RETURN
ENTSET		TC	NVSUBEND
		CCS	MPAC +1		# TEST VERB
		TC	+4		# IF VERB NOT +0, GO ON
		XCH	MPAC
		TC	UPDATNN -1	# IF VERB = +0, DISPLAY NOUN . THEN RETURN
		TC	NVSUBEND
		XCH	MPAC +1
		TC	UPDATVB -1	# IF BOTH NOUN AND VERB NOT +0, DISPLAY
		XCH	MPAC		# BOTH AND GO TO ENTPAS0
		TC	UPDATNN -1
		INDEX	NOUNREG
		CAF	NNADTAB
		CCS	A
		TC	+3		# NORMAL
		TC	GODSPALM	# NOUN NOT IN USE
		TC	MATBSUB
NVSUB2		CAF	ZERO
		TS	LOADSTAT	# SET FOR WAITING FOR DATA CONDITION
		TS	CLPASS
		TC	ENTPAS0

MATBSUB		XCH	MPAC +2		# NVSUB CALL LEFT ADDRES FOR MATBS IN
		TS	NOUNADD		# MPAC+2.
		TC	NVSUB2



LOW6		OCT	77
MID6		OCT	7700

		SETLOC	NVSUBEND +3
KILMONON	CS	BIT15		# FORCE BIT 15 OF MONSAVE1 TO 1.
		INHINT			# 	  THIS IS THE KILL MONITOR BIT.
		MASK	MONSAVE1
		AD	BIT15
		TS	MONSAVE1
		RELINT
		TC	Q



# LOADSTAT  +0 INACTIVE(WAITING FOR DATA). SET BY NVSUB
# 	    +1  PROCEED NO DATA. SET BY SPECIAL VERB
#	   -1 TERMINATE   SET BY SPECIAL VERB
#	   -0 DATA IN   SET BY END OF LOAD ROUTINE
#
# L  TC ENDIDLE  (FIXED FIXED)
# ROUTINES THAT REQUEST LOADS THROUGH NVSUB SHOULD USE ENDIDLE WHILE
# WAITING FOR THE DATA TO BE LOADED. ENDIDLE PUTS CURRENT JOB TO SLEEP.
# RECALTST TESTS LOADSTAT AND WAKES JOB UP TO,
# L+1 FOR TERMINATE
# L+2 FOR PROCEED WITHOUT DATA
# L+3 FOR DATA IN
# IT DOES NOTHING     IF LOADSTAT INDICATES WAITING FOR DATA.

ENDIDLE		XCH	Q		# NOVAC ROUTINES ENTER HERE
		TS	TEMQS
		XCH	BANKREG
		TS	BANKTEM
		TC	MAKECADR
		CAF	ONE
		TS	DSPLOCK
		XCH	ADDRWD
		TS	CADRSTOR
		TC	JOBSLEEP

ENDINST		TC	ENDOFJOB

BNKCON		OCT	5777


		SETLOC	MID6 +1
# DSPMM  PLACE MAJOR MODE CODE INTO MODREG

DSPMM1		CAF	MD1		# GETS HERE THRU DSPMM (STANDARD LEAD IN)
		TS	DSPCOUNT
		CS	MODREG
		CS	A
		TC	DSP2BIT
ENDSPMM1	TC	UPDATRET



# RECALTST IS ENTERED DIRECTLY AFTER DATA IS 
# LOADED, TERMINATE VERB IS EXECUTED, OR THE PROCEED WITHOUT DATA VERB IS
# EXECUTED. IT WAKES UP JOB THAT DID TC ENDIDLE.
#
# IF NVSUB INITIATED LOAD, AND ENDIDLE WAS NOT USED, THEN IT RELEASES
# DISPLAY SYST. (NEEDED FOR DATAWAIT)

		SETLOC	SWTAB +4

RECALTST 	CCS	CADRSTOR
		TC	+2
		TC	ENDOFJOB	# NORMAL EXIT IF KEYBOARD INITIATED
		CAF	ZERO
		XCH	CADRSTOR
		INHINT
		TC	JOBWAKE
		CCS	LOADSTAT
		TC	DOPROC		# + PROCEED WITHOUT DATA
		TC	ENDOFJOB	# PATHALOGICAL CASE EXIT
		TC	DOTERM		# -   TERMINATE
		CS	TWO
RECAL2		INDEX	LOCCTR
		AD	LOC		# LOC IS - FOR BASIC JOBS
		INDEX	LOCCTR
		TS	LOC
		RELINT
RECAL3		TC	RELDSP1		# DOES NOT SEARCH LIST
		TC	ENDOFJOB

DOTERM		CAF	ZERO
		TC	RECAL2

DOPROC		CS	ONE
		TC	RECAL2


# THE FOLLOWING REFERS TO THE NOUN TABLES



		SETLOC	DSPMM1 +6

# COMPONENT CODE NUMBER		INTERPRETATION
#
# 00000				1 COMPONENT
# 00001				2 COMPONENT (EACH S P)
# 00010				3 COMPONENT (EACH SP)



# SF ROUTINE CODE NUMBER	INTERPRETATION
#
# 00000		STRAIGHT FRACTIONAL
# 00001		DEGREES (XXX.XX)
# 00010		ARITHMETIC SF
# 00011		ARITH DP1	OUT(MULT BY 2/14 AT END)	IN(STRAIGHT)
# 00100		ARITH DP2	OUT(STRAIGHT)			IN(SL 7 AT END)
# 00101		OPTICS DEGREES(XX.XXX MAX 89.999) OR (XXX.XX MAX 179.99)
# END OF SF ROUTINE CODE NUMBERS



# SF CONSTANT CODE NUMBER	INTERPRETATION
#
# 00000				WHOLE
# 00000				TIME SEC(XXX.XX)SAME AS WHOLE (ARITH DP1)
# 00001				TIME HOURS(XXX.XX) USE ARITH DP2
# 00010				DEGREES
# 00010				OPTICS DEGREES
# 00011				GYRO DEGREES(XX.XXX) USE ARITH DP1
# END OF SF CONSTANT CODE NUMBERS

# FOR GREATER THAN SINGLE PRECISION SCALES, PUT ADDRESS OF MAJOR PART INTO
# NOUN TABLES.
# OCTAL LOADS PLACE +0 INTO MAJOR PART, DATA INTO MINOR PART.
# OCTAL DISPLAYS SHOW MINOR PART ONLY.
# TO GET AT BOTH MAJOR AND MINOR PARTS (IN OCTAL), USE NOUN 01.


					# NN   NORMAL NOUNS
NNADTAB		OCT	00000		# 00 NOT IN USE
		OCT	40000		# 01 SPECIFY MACHINE ADDRESS (FRACTIONAL)
		OCT	40000		# 02 SPECIFY MACHINE ADDRESS (WHOLE)
		OCT	40000		# 03 SPECIFY MACHINE ADDRESS (DEGREES)
		OCT	40000		# 04 SPECIFY MACHINE ADDRESS (HOURS)
		OCT	40000		# 05 SPECIFY MACHINE ADDRESS (SECONDS)
		OCT	40000		# 06 SPECIFY MACHINE ADDRESS (GYRO DEG)
		OCT	40000		# 07 SPECIFY MACHINE ADDRESS (Y OPT DEG.)
		OCT	00000		# 10 SPARE
		OCT	00000		# 11 SPARE
		OCT	00000		# 12 SPARE
		OCT	00000		# 13 SPARE
		OCT	00000		# 14 SPARE
		OCT	77777		# 15 INCREMENT MACHINE ADDRESS
		OCT	00035		# 16 TIME SECONDS
		OCT	00035		# 17 TIME HOURS
		ADRES	CDUX		# 20 ICDU
		ADRES	PIPAX		# 21 PIPAS
		ADRES	THETAD		# 22 NEW ANGLES I
		ADRES	DSPTEM2		# 23 DELTA ANGLES I
		ADRES	DSPTEM1		# 24 DELTA TIME (SEC)
		ADRES	DSPTEM1		# 25 CHECKLIST
		ADRES	DSPTEM1		# 26 PRIO/DELAY
		ADRES	SMODE		# 27 SELF TEST ON/OFF SWITCH
		ADRES	DSPTEM1		# 30 STAR NUMBERS
		ADRES	FAILREG		# 31 FAILREG
		OCT	00000		# 32 SPARE
		OCT	00000		# 33 SPARE
		OCT	00000		# 34 SPARE
		OCT	00000		# 35 SPARE
		OCT	00000		# 36 SPARE
		OCT	00000		# 37 SPARE
		OCT	00000		# 40 SPARE
		OCT	00000		# 41 SPARE
		OCT	00000		# 42 SPARE
		OCT	00000		# 43 SPARE
		OCT	00000		# 44 SPARE
		OCT	00000		# 45 SPARE
		OCT	00000		# 46 SPARE
		OCT	00000		# 47 SPARE
		OCT	00000		# 50 SPARE
		OCT	00000		# 51 SPARE
		OCT	00000		# 52 SPARE
		OCT	00000		# 53 SPARE
		OCT	00000		# 54 SPARE

					# NN  MIXED NOUNS
		OCT	02000		# 55 OCDU
		OCT	04002		# 56 UNCALLED MARK DATA (OCDU & TIME(SEC))
		OCT	02005		# 57 NEW ANGLES OCDU
		OCT	02007		# 60 ICDUX AND TIME(SEC)
		OCT	02011		# 61 ICDUY AND TIME(SEC)
		OCT	02013		# 62 ICDUZ AND TIME(SEC)
		OCT	02015		# 63 OCDUX AND TIME(SEC)
		OCT	02017		# 64 OCDUY AND TIME(SEC)
		OCT	02021		# 65 SAMPLED TIME (HOURS AND SECONDS)
					#	(FETCHED IN INTERRUPT)
		OCT	04023		# 66 SYSTEM TEST RESULTS
		OCT	04026		# 67 DELTA GYRO ANGLES
		OCT	00000		# 70 SPARE
		OCT	00000		# 71 SPARE
		OCT	00000		# 72 SPARE
		OCT	00000		# 73 SPARE
		OCT	00000		# 74 SPARE
		OCT	00000		# 75 SPARE
		OCT	00000		# 76 SPARE
		OCT	00000		# 77 SPARE



					# NN        NORMAL NOUNS
NNTYPTAB	OCT	00000		# 00 NOT IN USE
		OCT	00000		# 01 1COMP  FRACTIONAL
		OCT	00100		# 02 1COMP  WHOLE
		OCT	00042		# 03 1COMP  DEGREES
		OCT	00201		# 04 1COMP  HOURS
		OCT	00140		# 05 1COMP  SECONDS
		OCT	00143		# 06 1COMP  GYRO DEGREES
		OCT	00242		# 07 1COMP  Y OPT DEGREES
		OCT	00000		# 10        SPARE
		OCT	00000		# 11        SPARE
		OCT	00000		# 12        SPARE
		OCT	00000		# 13        SPARE
		OCT	00000		# 14        SPARE
		OCT	00000		# 15 1COMP  OCTAL ONLY
		OCT	00140		# 16 1COMP  SECONDS
		OCT	00201		# 17 3COMP  HOURS
		OCT	04042		# 20 3COMP  DEGREES
		OCT	04100		# 21 3COMP  WHOLE
		OCT	04042		# 22 3COMP  DEGREES
		OCT	04042		# 23 3COMP  DEGREES
		OCT	00140		# 24 1COMP  SECONDS
		OCT	00100		# 25 1COMP  WHOLE
		OCT	00100		# 26 1COMP  WHOLE
		OCT	00100		# 27 1COMP  WHOLE
		OCT	04100		# 30 3COMP  WHOLE
		OCT	00000		# 31 1COMP  OCTAL ONLY
		OCT	00000		# 32        SPARE
		OCT	00000		# 33        SPARE
		OCT	00000		# 34        SPARE
		OCT	00000		# 35        SPARE
		OCT	00000		# 36        SPARE
		OCT	00000		# 37        SPARE
		OCT	00000		# 40        SPARE
		OCT	00000		# 41        SPARE
		OCT	00000		# 42        SPARE
		OCT	00000		# 43        SPARE
		OCT	00000		# 44        SPARE
		OCT	00000		# 45        SPARE
		OCT	00000		# 46        SPARE
		OCT	00000		# 47        SPARE
		OCT	00000		# 50        SPARE
		OCT	00000		# 51        SPARE
		OCT	00000		# 52        SPARE
		OCT	00000		# 53        SPARE
		OCT	00000		# 54        SPARE

					# NN        MIXED NOUNS
		OCT	00102		# 55 2COMP  DEGREES, Y OPT DEGREES
		OCT	00102		# 56 3COMP  DEGREES, Y OPT DEGREES, SECS
		OCT	00102		# 57 2COMP  DEGREES, Y OPT DEGREES
		OCT	00002		# 60 2COMP  DEGREES, SECS
		OCT	00002		# 61 2COMP  DEGREES, SECS
		OCT	00002		# 62 2COMP  DEGREES, SECS
		OCT	00002		# 63 2COMP  DEGREES, SECS
		OCT	00002		# 64 2COMP  Y OPT DEGREES, SECS
		OCT	00001		# 65 2COMP  HOURS, SECONDS
		OCT	00000		# 66 3COMP  WHOLE, FRACTIONAL, WHOLE
		OCT	06143		# 67 3COMP  GYRO DEGREES FOR EACH
		OCT	00000		# 70        SPARE
		OCT	00000		# 71        SPARE
		OCT	00000		# 72        SPARE
		OCT	00000		# 73        SPARE
		OCT	00000		# 74        SPARE
		OCT	00000		# 75        SPARE
		OCT	00000		# 76        SPARE
		OCT	00000		# 77        SPARE



SFINTAB1	OCT	00006		# WHOLE,TIME(SEC)		HIGH PART
		OCT	00000		# TIME HOURS
		OCT	0		# DEGREES
		OCT	00001		# GYRO DEGREES
# END OF SFINTAB1



SFINTAB2	OCT	03240		# WHOLE, TIME(SEC)		LO PART
		OCT	00000		# TIME HOURS
		OCT	0		# DEGREES ( SFCON IN DEGINSF)
		OCT	30707		# GYRO DEGREES
# END OF SFINTAB2



SFOUTAB1	OCT	05174		# WHOLE, TIME(SEC)		HIGH PART
		OCT	27670		# TIME HOURS
		OCT	0		# DEGREES
		OCT	22000		# GYRO DEGREES
# END OF SFOUTAB1



SFOUTAB2	OCT	13261		# WHOLE, TIME(SEC)		LO PART
		OCT	31357		# TIME HOURS
		OCT	0		# DEGREES
		OCT	00000		# GYRO DEGREES
# END OF SFOUTAB2



					# MIXNOUN  SF ROUT		REG
IDADDTAB	CADR	OPTX 	+02000	# 01	   DEGREES		52
		CADR	OPTY 	+12000	# 01	   Y OPT DEGREES	53
		CADR	DSPTEM1 +02000	# 02	   DEGREES		627
		CADR	DSPTEM1 +12001	# 02	   Y OPT DEGREES	630
		CADR	DSPTEM1 +06002	# 02	   SEC			631
		CADR	DESOPTX +02000	# 03	   DEGREES		724
		CADR	DESOPTX +12001	# 03	   Y OPT DEGREES	725
		CADR	CDUX	+02000	# 04	   DEGREES		47
		CADR	TIME2	+06000	# 04	   SEC			35
		CADR	CDUY	+02000	# 05	   DEGREES		50
		CADR	TIME2	+06000	# 05	   SEC			35
		CADR	CDUZ	+02000	# 06	   DEGREES		51
		CADR	TIME2	+06000	# 06	   SEC			35
		CADR	OPTX 	+02000	# 07	   DEGREES		52
		CADR	TIME2 	+06000	# 07	   SEC			35
		CADR	OPTY 	+12000	# 10	   Y OPT DEGREES	53
		CADR	TIME2 	+06000	# 10	   SEC			35
		CADR	TIME2	+10000	# 11	   HOURS		655
		CADR	TIME2	+06000	# 11	   SECONDS		655
		CADR	DSPTEM2 +04000	# 12	   WHOLE		632
		CADR	DSPTEM2 +00001	# 12	   FRACTIONAL		633
		CADR	DSPTEM2 +04002	# 12	   WHOLE		634
		CADR	GYROD 	+06000	# 13	   GYRO DEGREES		715
		CADR	GYROD 	+06002	# 13	   GYRO DEGREES		717
		CADR	GYROD 	+06004	# 13	   GYRO DEGREES		721
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE
		OCT	00000		#	   SPARE


# MISCELLANEOUS SERVICE ROUTINES



		SETLOC	ENDINST +2

R1D1		OCT	16
R2D1		OCT	11
R3D1		OCT	4

RIGHT5		TS	CYR
		CS	CYR
		CS	CYR
		CS	CYR
		CS	CYR
		XCH	CYR
		TC	Q

LEFT5		TS	CYL
		CS	CYL
		CS	CYL
		CS	CYL
		CS	CYL
		XCH	CYL
		TC	Q

SLEFT5		DOUBLE
		DOUBLE
		DOUBLE
		DOUBLE
		DOUBLE
		TC	Q



LOW5		OCT	37
MID5		OCT	1740
		OCT	76000		# MUST STAY HERE.

TCNOVAC		TC	NOVAC
TCWAIT		TC	WAITLIST
TCTSKOVR	TC	TASKOVER
TCFINDVC	TC	FINDVAC

PRIO30		OCT	30000

VD1		OCT	23
ND1		OCT	21
MD1		OCT	25


BINCON		DEC	10

TEN		EQUALS	BINCON

FALTON		INHINT			# TURN PROGRAM CHECK LIGHT ON
		CS	BIT5		# OUT1,BIT5(ALSO KNOWN AS ILLEGAL ORDER)
		MASK	OUT1
		AD	BIT5
		TS	OUT1
		RELINT
		TC	Q

FALTOF		INHINT			# TURN PROGRAM CHECK LIGHT OFF
		CS	BIT5
		MASK	OUT1
		TS	OUT1
		RELINT
		TC	Q

RELDSPON	INHINT			# TURN ON RELEASE DISPLAY SYST LIGHT
		CS	BIT3
		MASK	OUT1
		AD	BIT3
		TS	OUT1
		RELINT
		TC	Q

# INTERNAL ROUTINES THAT USE THE KEYBOARD AND DISPLAY SYSTEM(THRU
# NVSUB) MUST  TC GRABDSP  BEFOREHAND , TO GRAB THE DISPLAY SYSTEM AND
# MAKE IT BUSY TO OTHER INTERNAL USERS.
#
#	WHEN FINISHED , THERE MUST BE A TC FREEDSP , TO RELEASE THE
# SYSTEM FOR OTHER INTERNAL USERS.
#
#	THE CALLING SEQUENCES ARE
# L	TC	GRABDSP
# L+1	RETURN HERE WHEN SYSTEM IS ALREADY GRABBED
# L+2	RETURN HERE MEANS YOU HAVE IT
#
# L	TC	NVSUB
# L+1	RETURN HERE IF OPERATOR HAS INTERVENED
# L+2	RETURN HERE AFTER EXECUTION



# 	A ROUTINE CALLED GRABUSY IS PROVIDED (USE IS OPTIONAL) TO PUT YOUR
# JOB TO SLEEP UNTIL  THE SYSTEM IS FREED BY THE JOB HOLDING IT. 
# YOUR CADR IS PUT AT FIRST AVAILABLE SLOT IN A WAITING LIST (FIFO).
#
#	THE CALLING SEQUENCE IS
#		CAF	WAKECADR
#		TC	GRABUSY
#
#	A ROUTINE CALLED  NVSUBUSY IS PROVIDED (USE IS OPTIONAL)  TO PUT
# YOUR JOB TO SLEEP UNTIL THE OPERATOR RELEASES IT. YOUR CADR IS PUT
# ON TOP OF A WAITING LIST (FIFO). IT ALSO TURNS ON KEY RELEASE LIGHT.
#
# THE CALLING SEQUENCE IS
# CAF WAKECADR
# TC NVSUBUSY



# AFTER A TC FREEDSP, THE INTERNAL INTERLOCK IS KEPT BUSY FOR 10 SECONDS, 
# AFTER WHICH A CADR IS CALLED FROM THE LIST. THIS INSURES THAT ALL
# DISPLAYS WAITING WILL BE VISIBLE.



# GRABLOCK IS THE INTERNAL INTERLOCK FOR THE USE OF THE KEYBOARD
# AND DISPLAY SYSTEM.
# +0  FREE
# +1  SOME INTERNAL ROUTINE HAS GRABBED DSP SYST
# +2  SOME INTERNAL ROUTINE HAS GONE TO NVSUBUSY


GRABDSP		CCS	GRABLOCK
		TC	Q		# GRABBED. RETURN TO L+1
		CAF	ONE		# NOT GRABBED. SET TO +1
		TS	GRABLOCK	# AND RETURN TO L+2
		INDEX	Q
		TC	1



PREGBSY		CAF	LOW10		# SPECIAL ENTRANCE FOR ROUTINES IN BANKS
		MASK	Q		# DESIRING THE CADR OF 1 + (LOC FROM WHICH
		AD	BANKREG		# TC PREGBSY WAS DONE) TO BE ENTERED.
GRABUSY		TC	POSTJUMP
		CADR	GRABUSYB

		SETLOC	DOPROC +2

GRABUSY1	TS	CADRTEM
		CCS	GRABLOCK
		TC	+3		# STILL GRABBED
		XCH	CADRTEM		# NOT GRABBED SO DO DIRECT CALL
		TC	BANKJUMP
		CAF	TWO
		TS	LSTPTR
		INDEX	LSTPTR		# SEARCH LIST FOR FIRST AVAILABLE SPACE
		CCS	DSPLIST		# FROM BOTTOM.
		TC	+2
		TC	PUTINLST	# SPACE FOUND
		CCS	LSTPTR		# DECREMENT POINTER
		TC	-6
		TC	LSTFULL
PUTINLST	XCH	CADRTEM
		INDEX	LSTPTR
		TS	DSPLIST
		TC	JOBSLEEP



		SETLOC	GRABUSY +2
PRENVBSY	CS	6K+3		# SPECIAL ENTRANCE FOR ROUTINES IN BANKS
		AD	Q		# DESIRING THE CADR OF (LOC FROM WHICH THE
		AD	BANKREG		# TC PRENVBSY WAS DONE) -2 TO BE ENTERED.
NVSUBUSY	TC	POSTJUMP
		CADR	NVSUBSYB
6K+3		OCT	6003		# TC PRENVBSY WAS DONE) -2 TO BE ENTERED.

		SETLOC	PUTINLST +4
NVSUBSY1	TS	CADRTEM
		CCS	DSPLOCK		# TEST IF REALLY LOCKED OUT
		TC	+3		# STILL BUSY
		XCH	CADRTEM		# DSPLOCK = +0 SO RETURN DIRECTLY
		TC	BANKJUMP
		CAF	TWO		# SET FOR GRABBED STATE AND NVSUBUSY USE
		TS	GRABLOCK
		XCH	CADRTEM
		XCH	DSPLIST +2	# ENTER CADR INTO FIRST POSITION OF LIST
		XCH	DSPLIST +1	# 	(BOTTOM)
		XCH	DSPLIST
		CCS	A
		TC	LSTFULL
		TC	+2
		TC	LSTFULL
		TC	RELDSPON
		CS	DSPLIST +2
		COM
ENDNVBSY	TC	JOBSLEEP

		SETLOC	NVSUBUSY +3

RELDSP		XCH	Q		# SET DSPLOCK TO +0, TURN RELDSP LIGHT
		TS	RELRET		# OFF,  SEARCH DSPLIST
		CAF	NEG1
		AD	GRABLOCK
		CCS	A		# SEARCH LIST ONLY IF GRABLOCK = +2
		TC	+4		# 	(SOMEONE USED NVSUBUSY)
		LOC	+1
		TC	RELDSP2
		TC	RELDSP2
		CAF	ZERO
		XCH	DSPLIST
		XCH	DSPLIST +1
		XCH	DSPLIST +2
		TS	CADRTEM
		CCS	A
		TC	+2
		TC	RELDSP2		# LIST EMPTY
		XCH	CADRTEM
		INHINT
		TC	JOBWAKE
		CAF	ONE
		TS	GRABLOCK
RELDSP2		CS	BIT3
		MASK	OUT1
		TS	OUT1
		CAF	ZERO
		TS	DSPLOCK
		RELINT
		TC	RELRET
RELDSP1		XCH	Q		# SET DSPLOCK TO +0, RELDSP LIGHT OFF, 
		TS	RELRET		# NO LIST SEARCH
		INHINT
		TC	RELDSP2


FREEDSP		XCH	Q
		TS	FREERET
		INHINT
		CAF	SHOTIME
		TC	WAITLIST
		CADR	FREEWAIT
		RELINT
		TC	FREERET

SHOTIME		DEC	1000
		SETLOC	ENDNVBSY +1

FREEWAIT	CAF	PRIO30		# CALLED BY T3RUPT
		TC	NOVAC
		CADR	FREDSPDO
		TC	TASKOVER



FREDSPDO	CAF	ZERO		# CALLED BY EXECUTIVE
		XCH	DSPLIST
		XCH	DSPLIST +1
		XCH	DSPLIST +2
		TS	CADRTEM
		CCS	A
		TC	+2
		TC	LSTEMPTY
		XCH	CADRTEM
		INHINT
		TC	JOBWAKE
		RELINT
		CAF	ONE		# SET FOR GRABBED CONDITION
		TS	GRABLOCK
		TC	ENDOFJOB
LSTEMPTY	CAF	ZERO		# SET FOR FREE CONDITION
		TC	-3



LSTFULL		TC	ABORT
		OCT	01206		# PINBALL WAITING LINE FULL.
